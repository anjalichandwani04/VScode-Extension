{ "apply_theme": { "bokeh.models.AnnularWedge": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Annulus": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Arc": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.ArrowHead": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Bezier": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Block": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AbstractButton": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Circle": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Dialog": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Ellipse": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Examiner": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.CumSum": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.plotting.figure": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AllIndices": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.BasicTickFormatter": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Glyph": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.EdgeCoordinates": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Grid": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AbstractGroup": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.HArea": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.core.has_props.HasProps": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.HBar": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.HexTile": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.BuiltinIcon": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Image": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.ImageRGBA": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.ImageURL": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AutocompleteInput": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Line": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.GMapOptions": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.CategoricalColorMapper": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Action": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.model.DataModel": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.MultiLine": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.MultiPolygons": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Oval": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Patch": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Patches": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Quad": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Quadratic": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.DataRange": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Ray": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Rect": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.ContourRenderer": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.CategoricalScale": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Scatter": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Segment": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.IntersectRenderers": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.ByCSS": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AbstractSlider": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AjaxDataSource": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.sphinxext.sample.Foo": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Step": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AvgAggregator": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Ascii": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.CanvasTexture": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.AdaptiveTicker": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.BBoxTileSource": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Tooltip": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.CustomJSTransform": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.UIElement": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.VArea": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.VBar": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values.", "bokeh.models.Widget": "Apply a set of theme values which will be used rather than defaults, but will not override application-set values." }, "dataspecs": { "bokeh.models.AnnularWedge": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Annulus": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Arc": "Collect the names of all DataSpec properties on this class.", "bokeh.models.ArrowHead": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Bezier": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Block": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AbstractButton": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Circle": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Dialog": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Ellipse": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Examiner": "Collect the names of all DataSpec properties on this class.", "bokeh.models.CumSum": "Collect the names of all DataSpec properties on this class.", "bokeh.plotting.figure": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AllIndices": "Collect the names of all DataSpec properties on this class.", "bokeh.models.BasicTickFormatter": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Glyph": "Collect the names of all DataSpec properties on this class.", "bokeh.models.EdgeCoordinates": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Grid": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AbstractGroup": "Collect the names of all DataSpec properties on this class.", "bokeh.models.HArea": "Collect the names of all DataSpec properties on this class.", "bokeh.core.has_props.HasProps": "Collect the names of all DataSpec properties on this class.", "bokeh.models.HBar": "Collect the names of all DataSpec properties on this class.", "bokeh.models.HexTile": "Collect the names of all DataSpec properties on this class.", "bokeh.models.BuiltinIcon": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Image": "Collect the names of all DataSpec properties on this class.", "bokeh.models.ImageRGBA": "Collect the names of all DataSpec properties on this class.", "bokeh.models.ImageURL": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AutocompleteInput": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Line": "Collect the names of all DataSpec properties on this class.", "bokeh.models.GMapOptions": "Collect the names of all DataSpec properties on this class.", "bokeh.models.CategoricalColorMapper": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Action": "Collect the names of all DataSpec properties on this class.", "bokeh.model.DataModel": "Collect the names of all DataSpec properties on this class.", "bokeh.models.MultiLine": "Collect the names of all DataSpec properties on this class.", "bokeh.models.MultiPolygons": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Oval": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Patch": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Patches": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Quad": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Quadratic": "Collect the names of all DataSpec properties on this class.", "bokeh.models.DataRange": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Ray": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Rect": "Collect the names of all DataSpec properties on this class.", "bokeh.models.ContourRenderer": "Collect the names of all DataSpec properties on this class.", "bokeh.models.CategoricalScale": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Scatter": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Segment": "Collect the names of all DataSpec properties on this class.", "bokeh.models.IntersectRenderers": "Collect the names of all DataSpec properties on this class.", "bokeh.models.ByCSS": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AbstractSlider": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AjaxDataSource": "Collect the names of all DataSpec properties on this class.", "bokeh.sphinxext.sample.Foo": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Step": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AvgAggregator": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Ascii": "Collect the names of all DataSpec properties on this class.", "bokeh.models.CanvasTexture": "Collect the names of all DataSpec properties on this class.", "bokeh.models.AdaptiveTicker": "Collect the names of all DataSpec properties on this class.", "bokeh.models.BBoxTileSource": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Tooltip": "Collect the names of all DataSpec properties on this class.", "bokeh.models.CustomJSTransform": "Collect the names of all DataSpec properties on this class.", "bokeh.models.UIElement": "Collect the names of all DataSpec properties on this class.", "bokeh.models.VArea": "Collect the names of all DataSpec properties on this class.", "bokeh.models.VBar": "Collect the names of all DataSpec properties on this class.", "bokeh.models.Widget": "Collect the names of all DataSpec properties on this class." }, "descriptors": { "bokeh.models.AnnularWedge": "List of property descriptors in the order of definition.", "bokeh.models.Annulus": "List of property descriptors in the order of definition.", "bokeh.models.Arc": "List of property descriptors in the order of definition.", "bokeh.models.Bezier": "List of property descriptors in the order of definition.", "bokeh.models.Block": "List of property descriptors in the order of definition.", "bokeh.models.AbstractButton": "List of property descriptors in the order of definition.", "bokeh.models.Circle": "List of property descriptors in the order of definition.", "bokeh.models.Dialog": "List of property descriptors in the order of definition.", "bokeh.models.Ellipse": "List of property descriptors in the order of definition.", "bokeh.models.Examiner": "List of property descriptors in the order of definition.", "bokeh.models.CumSum": "List of property descriptors in the order of definition.", "bokeh.plotting.figure": "List of property descriptors in the order of definition.", "bokeh.models.AllIndices": "List of property descriptors in the order of definition.", "bokeh.models.BasicTickFormatter": "List of property descriptors in the order of definition.", "bokeh.models.Glyph": "List of property descriptors in the order of definition.", "bokeh.models.EdgeCoordinates": "List of property descriptors in the order of definition.", "bokeh.models.Grid": "List of property descriptors in the order of definition.", "bokeh.models.AbstractGroup": "List of property descriptors in the order of definition.", "bokeh.models.HArea": "List of property descriptors in the order of definition.", "bokeh.core.has_props.HasProps": "List of property descriptors in the order of definition.", "bokeh.models.HBar": "List of property descriptors in the order of definition.", "bokeh.models.HexTile": "List of property descriptors in the order of definition.", "bokeh.models.BuiltinIcon": "List of property descriptors in the order of definition.", "bokeh.models.Image": "List of property descriptors in the order of definition.", "bokeh.models.ImageRGBA": "List of property descriptors in the order of definition.", "bokeh.models.ImageURL": "List of property descriptors in the order of definition.", "bokeh.models.AutocompleteInput": "List of property descriptors in the order of definition.", "bokeh.models.Line": "List of property descriptors in the order of definition.", "bokeh.models.GMapOptions": "List of property descriptors in the order of definition.", "bokeh.models.CategoricalColorMapper": "List of property descriptors in the order of definition.", "bokeh.models.Action": "List of property descriptors in the order of definition.", "bokeh.model.DataModel": "List of property descriptors in the order of definition.", "bokeh.models.MultiLine": "List of property descriptors in the order of definition.", "bokeh.models.MultiPolygons": "List of property descriptors in the order of definition.", "bokeh.models.Patch": "List of property descriptors in the order of definition.", "bokeh.models.Patches": "List of property descriptors in the order of definition.", "bokeh.models.Quad": "List of property descriptors in the order of definition.", "bokeh.models.Quadratic": "List of property descriptors in the order of definition.", "bokeh.models.DataRange": "List of property descriptors in the order of definition.", "bokeh.models.Ray": "List of property descriptors in the order of definition.", "bokeh.models.Rect": "List of property descriptors in the order of definition.", "bokeh.models.ContourRenderer": "List of property descriptors in the order of definition.", "bokeh.models.CategoricalScale": "List of property descriptors in the order of definition.", "bokeh.models.Scatter": "List of property descriptors in the order of definition.", "bokeh.models.Segment": "List of property descriptors in the order of definition.", "bokeh.models.IntersectRenderers": "List of property descriptors in the order of definition.", "bokeh.models.ByCSS": "List of property descriptors in the order of definition.", "bokeh.models.AbstractSlider": "List of property descriptors in the order of definition.", "bokeh.models.AjaxDataSource": "List of property descriptors in the order of definition.", "bokeh.sphinxext.sample.Foo": "List of property descriptors in the order of definition.", "bokeh.models.Step": "List of property descriptors in the order of definition.", "bokeh.models.AvgAggregator": "List of property descriptors in the order of definition.", "bokeh.models.Ascii": "List of property descriptors in the order of definition.", "bokeh.models.CanvasTexture": "List of property descriptors in the order of definition.", "bokeh.models.AdaptiveTicker": "List of property descriptors in the order of definition.", "bokeh.models.BBoxTileSource": "List of property descriptors in the order of definition.", "bokeh.models.Tooltip": "List of property descriptors in the order of definition.", "bokeh.models.CustomJSTransform": "List of property descriptors in the order of definition.", "bokeh.models.UIElement": "List of property descriptors in the order of definition.", "bokeh.models.VArea": "List of property descriptors in the order of definition.", "bokeh.models.VBar": "List of property descriptors in the order of definition.", "bokeh.models.Widget": "List of property descriptors in the order of definition." }, "destroy": { "bokeh.models.AnnularWedge": "Clean up references to the document and property", "bokeh.models.Annulus": "Clean up references to the document and property", "bokeh.models.Arc": "Clean up references to the document and property", "bokeh.models.ArrowHead": "Clean up references to the document and property", "bokeh.models.Bezier": "Clean up references to the document and property", "bokeh.models.Block": "Clean up references to the document and property", "bokeh.models.AbstractButton": "Clean up references to the document and property", "bokeh.models.Circle": "Clean up references to the document and property", "bokeh.models.Dialog": "Clean up references to the document and property", "bokeh.models.Ellipse": "Clean up references to the document and property", "bokeh.models.Examiner": "Clean up references to the document and property", "bokeh.models.CumSum": "Clean up references to the document and property", "bokeh.plotting.figure": "Clean up references to the document and property", "bokeh.models.AllIndices": "Clean up references to the document and property", "bokeh.models.BasicTickFormatter": "Clean up references to the document and property", "bokeh.models.Glyph": "Clean up references to the document and property", "bokeh.models.EdgeCoordinates": "Clean up references to the document and property", "bokeh.models.Grid": "Clean up references to the document and property", "bokeh.models.AbstractGroup": "Clean up references to the document and property", "bokeh.models.HArea": "Clean up references to the document and property", "bokeh.models.HBar": "Clean up references to the document and property", "bokeh.models.HexTile": "Clean up references to the document and property", "bokeh.models.BuiltinIcon": "Clean up references to the document and property", "bokeh.models.Image": "Clean up references to the document and property", "bokeh.models.ImageRGBA": "Clean up references to the document and property", "bokeh.models.ImageURL": "Clean up references to the document and property", "bokeh.models.AutocompleteInput": "Clean up references to the document and property", "bokeh.models.Line": "Clean up references to the document and property", "bokeh.models.GMapOptions": "Clean up references to the document and property", "bokeh.models.CategoricalColorMapper": "Clean up references to the document and property", "bokeh.models.Action": "Clean up references to the document and property", "bokeh.model.DataModel": "Clean up references to the document and property", "bokeh.models.MultiLine": "Clean up references to the document and property", "bokeh.models.MultiPolygons": "Clean up references to the document and property", "bokeh.models.Oval": "Clean up references to the document and property", "bokeh.models.Patch": "Clean up references to the document and property", "bokeh.models.Patches": "Clean up references to the document and property", "bokeh.models.Quad": "Clean up references to the document and property", "bokeh.models.Quadratic": "Clean up references to the document and property", "bokeh.models.DataRange": "Clean up references to the document and property", "bokeh.models.Ray": "Clean up references to the document and property", "bokeh.models.Rect": "Clean up references to the document and property", "bokeh.models.ContourRenderer": "Clean up references to the document and property", "bokeh.models.CategoricalScale": "Clean up references to the document and property", "bokeh.models.Scatter": "Clean up references to the document and property", "bokeh.models.Segment": "Clean up references to the document and property", "bokeh.models.IntersectRenderers": "Clean up references to the document and property", "bokeh.models.ByCSS": "Clean up references to the document and property", "bokeh.models.AbstractSlider": "Clean up references to the document and property", "bokeh.models.AjaxDataSource": "Clean up references to the document and property", "bokeh.sphinxext.sample.Foo": "Clean up references to the document and property", "bokeh.models.Step": "Clean up references to the document and property", "bokeh.models.AvgAggregator": "Clean up references to the document and property", "bokeh.models.Ascii": "Clean up references to the document and property", "bokeh.models.CanvasTexture": "Clean up references to the document and property", "bokeh.models.AdaptiveTicker": "Clean up references to the document and property", "bokeh.models.BBoxTileSource": "Clean up references to the document and property", "bokeh.models.Tooltip": "Clean up references to the document and property", "bokeh.models.CustomJSTransform": "Clean up references to the document and property", "bokeh.models.UIElement": "Clean up references to the document and property", "bokeh.models.VArea": "Clean up references to the document and property", "bokeh.models.VBar": "Clean up references to the document and property", "bokeh.models.Widget": "Clean up references to the document and property" }, "equals": { "bokeh.models.AnnularWedge": "Structural equality of models.", "bokeh.models.Annulus": "Structural equality of models.", "bokeh.models.Arc": "Structural equality of models.", "bokeh.models.ArrowHead": "Structural equality of models.", "bokeh.models.Bezier": "Structural equality of models.", "bokeh.models.Block": "Structural equality of models.", "bokeh.models.AbstractButton": "Structural equality of models.", "bokeh.models.Circle": "Structural equality of models.", "bokeh.models.Dialog": "Structural equality of models.", "bokeh.models.Ellipse": "Structural equality of models.", "bokeh.models.Examiner": "Structural equality of models.", "bokeh.models.CumSum": "Structural equality of models.", "bokeh.plotting.figure": "Structural equality of models.", "bokeh.models.AllIndices": "Structural equality of models.", "bokeh.models.BasicTickFormatter": "Structural equality of models.", "bokeh.models.Glyph": "Structural equality of models.", "bokeh.models.EdgeCoordinates": "Structural equality of models.", "bokeh.models.Grid": "Structural equality of models.", "bokeh.models.AbstractGroup": "Structural equality of models.", "bokeh.models.HArea": "Structural equality of models.", "bokeh.core.has_props.HasProps": "Structural equality of models.", "bokeh.models.HBar": "Structural equality of models.", "bokeh.models.HexTile": "Structural equality of models.", "bokeh.models.BuiltinIcon": "Structural equality of models.", "bokeh.models.Image": "Structural equality of models.", "bokeh.models.ImageRGBA": "Structural equality of models.", "bokeh.models.ImageURL": "Structural equality of models.", "bokeh.models.AutocompleteInput": "Structural equality of models.", "bokeh.models.Line": "Structural equality of models.", "bokeh.models.GMapOptions": "Structural equality of models.", "bokeh.models.CategoricalColorMapper": "Structural equality of models.", "bokeh.models.Action": "Structural equality of models.", "bokeh.model.DataModel": "Structural equality of models.", "bokeh.models.MultiLine": "Structural equality of models.", "bokeh.models.MultiPolygons": "Structural equality of models.", "bokeh.models.Oval": "Structural equality of models.", "bokeh.models.Patch": "Structural equality of models.", "bokeh.models.Patches": "Structural equality of models.", "bokeh.models.Quad": "Structural equality of models.", "bokeh.models.Quadratic": "Structural equality of models.", "bokeh.models.DataRange": "Structural equality of models.", "bokeh.models.Ray": "Structural equality of models.", "bokeh.models.Rect": "Structural equality of models.", "bokeh.models.ContourRenderer": "Structural equality of models.", "bokeh.models.CategoricalScale": "Structural equality of models.", "bokeh.models.Scatter": "Structural equality of models.", "bokeh.models.Segment": "Structural equality of models.", "bokeh.models.IntersectRenderers": "Structural equality of models.", "bokeh.models.ByCSS": "Structural equality of models.", "bokeh.models.AbstractSlider": "Structural equality of models.", "bokeh.models.AjaxDataSource": "Structural equality of models.", "bokeh.sphinxext.sample.Foo": "Structural equality of models.", "bokeh.models.Step": "Structural equality of models.", "bokeh.models.AvgAggregator": "Structural equality of models.", "bokeh.models.Ascii": "Structural equality of models.", "bokeh.models.CanvasTexture": "Structural equality of models.", "bokeh.models.AdaptiveTicker": "Structural equality of models.", "bokeh.models.BBoxTileSource": "Structural equality of models.", "bokeh.models.Tooltip": "Structural equality of models.", "bokeh.models.CustomJSTransform": "Structural equality of models.", "bokeh.models.UIElement": "Structural equality of models.", "bokeh.models.VArea": "Structural equality of models.", "bokeh.models.VBar": "Structural equality of models.", "bokeh.models.Widget": "Structural equality of models." }, "js_link": { "bokeh.models.AnnularWedge": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Annulus": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Arc": "Link two Bokeh model properties using JavaScript.", "bokeh.models.ArrowHead": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Bezier": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Block": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AbstractButton": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Circle": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Dialog": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Ellipse": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Examiner": "Link two Bokeh model properties using JavaScript.", "bokeh.models.CumSum": "Link two Bokeh model properties using JavaScript.", "bokeh.plotting.figure": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AllIndices": "Link two Bokeh model properties using JavaScript.", "bokeh.models.BasicTickFormatter": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Glyph": "Link two Bokeh model properties using JavaScript.", "bokeh.models.EdgeCoordinates": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Grid": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AbstractGroup": "Link two Bokeh model properties using JavaScript.", "bokeh.models.HArea": "Link two Bokeh model properties using JavaScript.", "bokeh.models.HBar": "Link two Bokeh model properties using JavaScript.", "bokeh.models.HexTile": "Link two Bokeh model properties using JavaScript.", "bokeh.models.BuiltinIcon": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Image": "Link two Bokeh model properties using JavaScript.", "bokeh.models.ImageRGBA": "Link two Bokeh model properties using JavaScript.", "bokeh.models.ImageURL": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AutocompleteInput": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Line": "Link two Bokeh model properties using JavaScript.", "bokeh.models.GMapOptions": "Link two Bokeh model properties using JavaScript.", "bokeh.models.CategoricalColorMapper": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Action": "Link two Bokeh model properties using JavaScript.", "bokeh.model.DataModel": "Link two Bokeh model properties using JavaScript.", "bokeh.models.MultiLine": "Link two Bokeh model properties using JavaScript.", "bokeh.models.MultiPolygons": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Oval": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Patch": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Patches": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Quad": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Quadratic": "Link two Bokeh model properties using JavaScript.", "bokeh.models.DataRange": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Ray": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Rect": "Link two Bokeh model properties using JavaScript.", "bokeh.models.ContourRenderer": "Link two Bokeh model properties using JavaScript.", "bokeh.models.CategoricalScale": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Scatter": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Segment": "Link two Bokeh model properties using JavaScript.", "bokeh.models.IntersectRenderers": "Link two Bokeh model properties using JavaScript.", "bokeh.models.ByCSS": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AbstractSlider": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AjaxDataSource": "Link two Bokeh model properties using JavaScript.", "bokeh.sphinxext.sample.Foo": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Step": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AvgAggregator": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Ascii": "Link two Bokeh model properties using JavaScript.", "bokeh.models.CanvasTexture": "Link two Bokeh model properties using JavaScript.", "bokeh.models.AdaptiveTicker": "Link two Bokeh model properties using JavaScript.", "bokeh.models.BBoxTileSource": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Tooltip": "Link two Bokeh model properties using JavaScript.", "bokeh.models.CustomJSTransform": "Link two Bokeh model properties using JavaScript.", "bokeh.models.UIElement": "Link two Bokeh model properties using JavaScript.", "bokeh.models.VArea": "Link two Bokeh model properties using JavaScript.", "bokeh.models.VBar": "Link two Bokeh model properties using JavaScript.", "bokeh.models.Widget": "Link two Bokeh model properties using JavaScript." }, "js_on_change": { "bokeh.models.AnnularWedge": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Annulus": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Arc": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.ArrowHead": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Bezier": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Block": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AbstractButton": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Circle": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Dialog": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Ellipse": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Examiner": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.CumSum": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.plotting.figure": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AllIndices": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.BasicTickFormatter": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Glyph": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.EdgeCoordinates": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Grid": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AbstractGroup": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.HArea": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.HBar": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.HexTile": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.BuiltinIcon": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Image": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.ImageRGBA": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.ImageURL": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AutocompleteInput": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Line": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.GMapOptions": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.CategoricalColorMapper": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Action": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.model.DataModel": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.MultiLine": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.MultiPolygons": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Oval": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Patch": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Patches": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Quad": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Quadratic": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.DataRange": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Ray": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Rect": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.ContourRenderer": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.CategoricalScale": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Scatter": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Segment": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.IntersectRenderers": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.ByCSS": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AbstractSlider": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AjaxDataSource": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.sphinxext.sample.Foo": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Step": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AvgAggregator": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Ascii": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.CanvasTexture": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.AdaptiveTicker": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.BBoxTileSource": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Tooltip": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.CustomJSTransform": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.UIElement": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.VArea": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.VBar": "Attach a CustomJS callback to an arbitrary BokehJS model event.", "bokeh.models.Widget": "Attach a CustomJS callback to an arbitrary BokehJS model event." }, "lookup": { "bokeh.models.AnnularWedge": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Annulus": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Arc": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.ArrowHead": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Bezier": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Block": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AbstractButton": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Circle": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Dialog": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Ellipse": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Examiner": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.CumSum": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.plotting.figure": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AllIndices": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.BasicTickFormatter": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Glyph": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.EdgeCoordinates": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Grid": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AbstractGroup": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.HArea": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.core.has_props.HasProps": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.HBar": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.HexTile": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.BuiltinIcon": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Image": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.ImageRGBA": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.ImageURL": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AutocompleteInput": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Line": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.GMapOptions": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.CategoricalColorMapper": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Action": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.model.DataModel": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.MultiLine": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.MultiPolygons": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Oval": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Patch": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Patches": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Quad": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Quadratic": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.DataRange": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Ray": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Rect": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.ContourRenderer": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.CategoricalScale": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Scatter": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Segment": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.IntersectRenderers": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.ByCSS": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AbstractSlider": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AjaxDataSource": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.sphinxext.sample.Foo": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Step": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AvgAggregator": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Ascii": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.CanvasTexture": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.AdaptiveTicker": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.BBoxTileSource": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Tooltip": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.CustomJSTransform": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.UIElement": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.VArea": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.VBar": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name.", "bokeh.models.Widget": "Find the PropertyDescriptor for a Bokeh property on a class, given the property name." }, "on_change": { "bokeh.models.AnnularWedge": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Annulus": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Arc": "Add a callback on this object to trigger when attr changes.", "bokeh.models.ArrowHead": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Bezier": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Block": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AbstractButton": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Circle": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Dialog": "Add a callback on this object to trigger when attr changes.", "bokeh.document.Document": "Provide callbacks to invoke if the document or any Model reachable from its roots changes.", "bokeh.models.Ellipse": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Examiner": "Add a callback on this object to trigger when attr changes.", "bokeh.models.CumSum": "Add a callback on this object to trigger when attr changes.", "bokeh.plotting.figure": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AllIndices": "Add a callback on this object to trigger when attr changes.", "bokeh.models.BasicTickFormatter": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Glyph": "Add a callback on this object to trigger when attr changes.", "bokeh.models.EdgeCoordinates": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Grid": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AbstractGroup": "Add a callback on this object to trigger when attr changes.", "bokeh.models.HArea": "Add a callback on this object to trigger when attr changes.", "bokeh.models.HBar": "Add a callback on this object to trigger when attr changes.", "bokeh.models.HexTile": "Add a callback on this object to trigger when attr changes.", "bokeh.models.BuiltinIcon": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Image": "Add a callback on this object to trigger when attr changes.", "bokeh.models.ImageRGBA": "Add a callback on this object to trigger when attr changes.", "bokeh.models.ImageURL": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AutocompleteInput": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Line": "Add a callback on this object to trigger when attr changes.", "bokeh.models.GMapOptions": "Add a callback on this object to trigger when attr changes.", "bokeh.models.CategoricalColorMapper": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Action": "Add a callback on this object to trigger when attr changes.", "bokeh.model.DataModel": "Add a callback on this object to trigger when attr changes.", "bokeh.models.MultiLine": "Add a callback on this object to trigger when attr changes.", "bokeh.models.MultiPolygons": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Oval": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Patch": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Patches": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Quad": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Quadratic": "Add a callback on this object to trigger when attr changes.", "bokeh.models.DataRange": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Ray": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Rect": "Add a callback on this object to trigger when attr changes.", "bokeh.models.ContourRenderer": "Add a callback on this object to trigger when attr changes.", "bokeh.models.CategoricalScale": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Scatter": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Segment": "Add a callback on this object to trigger when attr changes.", "bokeh.models.IntersectRenderers": "Add a callback on this object to trigger when attr changes.", "bokeh.models.ByCSS": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AbstractSlider": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AjaxDataSource": "Add a callback on this object to trigger when attr changes.", "bokeh.sphinxext.sample.Foo": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Step": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AvgAggregator": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Ascii": "Add a callback on this object to trigger when attr changes.", "bokeh.models.CanvasTexture": "Add a callback on this object to trigger when attr changes.", "bokeh.models.AdaptiveTicker": "Add a callback on this object to trigger when attr changes.", "bokeh.models.BBoxTileSource": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Tooltip": "Add a callback on this object to trigger when attr changes.", "bokeh.models.CustomJSTransform": "Add a callback on this object to trigger when attr changes.", "bokeh.models.UIElement": "Add a callback on this object to trigger when attr changes.", "bokeh.models.VArea": "Add a callback on this object to trigger when attr changes.", "bokeh.models.VBar": "Add a callback on this object to trigger when attr changes.", "bokeh.models.Widget": "Add a callback on this object to trigger when attr changes." }, "on_event": { "bokeh.models.AnnularWedge": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Annulus": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Arc": "Run callbacks when the specified event occurs on this Model", "bokeh.models.ArrowHead": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Bezier": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Block": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AbstractButton": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Circle": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Dialog": "Run callbacks when the specified event occurs on this Model", "bokeh.document.Document": "Provide callbacks to invoke if a bokeh event is received.", "bokeh.models.Ellipse": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Examiner": "Run callbacks when the specified event occurs on this Model", "bokeh.models.CumSum": "Run callbacks when the specified event occurs on this Model", "bokeh.plotting.figure": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AllIndices": "Run callbacks when the specified event occurs on this Model", "bokeh.models.BasicTickFormatter": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Glyph": "Run callbacks when the specified event occurs on this Model", "bokeh.models.EdgeCoordinates": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Grid": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AbstractGroup": "Run callbacks when the specified event occurs on this Model", "bokeh.models.HArea": "Run callbacks when the specified event occurs on this Model", "bokeh.models.HBar": "Run callbacks when the specified event occurs on this Model", "bokeh.models.HexTile": "Run callbacks when the specified event occurs on this Model", "bokeh.models.BuiltinIcon": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Image": "Run callbacks when the specified event occurs on this Model", "bokeh.models.ImageRGBA": "Run callbacks when the specified event occurs on this Model", "bokeh.models.ImageURL": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AutocompleteInput": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Line": "Run callbacks when the specified event occurs on this Model", "bokeh.models.GMapOptions": "Run callbacks when the specified event occurs on this Model", "bokeh.models.CategoricalColorMapper": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Action": "Run callbacks when the specified event occurs on this Model", "bokeh.model.DataModel": "Run callbacks when the specified event occurs on this Model", "bokeh.models.MultiLine": "Run callbacks when the specified event occurs on this Model", "bokeh.models.MultiPolygons": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Oval": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Patch": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Patches": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Quad": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Quadratic": "Run callbacks when the specified event occurs on this Model", "bokeh.models.DataRange": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Ray": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Rect": "Run callbacks when the specified event occurs on this Model", "bokeh.models.ContourRenderer": "Run callbacks when the specified event occurs on this Model", "bokeh.models.CategoricalScale": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Scatter": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Segment": "Run callbacks when the specified event occurs on this Model", "bokeh.models.IntersectRenderers": "Run callbacks when the specified event occurs on this Model", "bokeh.models.ByCSS": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AbstractSlider": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AjaxDataSource": "Run callbacks when the specified event occurs on this Model", "bokeh.sphinxext.sample.Foo": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Step": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AvgAggregator": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Ascii": "Run callbacks when the specified event occurs on this Model", "bokeh.models.CanvasTexture": "Run callbacks when the specified event occurs on this Model", "bokeh.models.AdaptiveTicker": "Run callbacks when the specified event occurs on this Model", "bokeh.models.BBoxTileSource": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Tooltip": "Run callbacks when the specified event occurs on this Model", "bokeh.models.CustomJSTransform": "Run callbacks when the specified event occurs on this Model", "bokeh.models.UIElement": "Run callbacks when the specified event occurs on this Model", "bokeh.models.VArea": "Run callbacks when the specified event occurs on this Model", "bokeh.models.VBar": "Run callbacks when the specified event occurs on this Model", "bokeh.models.Widget": "Run callbacks when the specified event occurs on this Model" }, "parameters": { "bokeh.models.AnnularWedge": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Annulus": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Arc": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Bezier": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Block": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AbstractButton": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Circle": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Dialog": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Ellipse": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Examiner": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.CumSum": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.plotting.figure": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AllIndices": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.BasicTickFormatter": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Glyph": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.EdgeCoordinates": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Grid": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AbstractGroup": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.HArea": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.HBar": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.HexTile": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.BuiltinIcon": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Image": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.ImageRGBA": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.ImageURL": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AutocompleteInput": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Line": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.GMapOptions": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.CategoricalColorMapper": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Action": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.model.DataModel": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.MultiLine": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.MultiPolygons": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Oval": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Patch": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Patches": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Quad": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Quadratic": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.DataRange": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Ray": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Rect": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.ContourRenderer": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.CategoricalScale": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Scatter": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Segment": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.IntersectRenderers": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.ByCSS": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AbstractSlider": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AjaxDataSource": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.sphinxext.sample.Foo": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Step": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AvgAggregator": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Ascii": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.CanvasTexture": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.AdaptiveTicker": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.BBoxTileSource": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Tooltip": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.CustomJSTransform": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.UIElement": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.VArea": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.VBar": "Generate Python Parameter values suitable for functions that are derived from the glyph.", "bokeh.models.Widget": "Generate Python Parameter values suitable for functions that are derived from the glyph." }, "properties": { "bokeh.models.AnnularWedge": "Collect the names of properties on this class.", "bokeh.models.Annulus": "Collect the names of properties on this class.", "bokeh.models.Arc": "Collect the names of properties on this class.", "bokeh.models.ArrowHead": "Collect the names of properties on this class.", "bokeh.models.Bezier": "Collect the names of properties on this class.", "bokeh.models.Block": "Collect the names of properties on this class.", "bokeh.models.AbstractButton": "Collect the names of properties on this class.", "bokeh.models.Circle": "Collect the names of properties on this class.", "bokeh.models.Dialog": "Collect the names of properties on this class.", "bokeh.models.Ellipse": "Collect the names of properties on this class.", "bokeh.models.Examiner": "Collect the names of properties on this class.", "bokeh.models.CumSum": "Collect the names of properties on this class.", "bokeh.plotting.figure": "Collect the names of properties on this class.", "bokeh.models.AllIndices": "Collect the names of properties on this class.", "bokeh.models.BasicTickFormatter": "Collect the names of properties on this class.", "bokeh.models.Glyph": "Collect the names of properties on this class.", "bokeh.models.EdgeCoordinates": "Collect the names of properties on this class.", "bokeh.models.Grid": "Collect the names of properties on this class.", "bokeh.models.AbstractGroup": "Collect the names of properties on this class.", "bokeh.models.HArea": "Collect the names of properties on this class.", "bokeh.core.has_props.HasProps": "Collect the names of properties on this class.", "bokeh.models.HBar": "Collect the names of properties on this class.", "bokeh.models.HexTile": "Collect the names of properties on this class.", "bokeh.models.BuiltinIcon": "Collect the names of properties on this class.", "bokeh.models.Image": "Collect the names of properties on this class.", "bokeh.models.ImageRGBA": "Collect the names of properties on this class.", "bokeh.models.ImageURL": "Collect the names of properties on this class.", "bokeh.models.AutocompleteInput": "Collect the names of properties on this class.", "bokeh.models.Line": "Collect the names of properties on this class.", "bokeh.models.GMapOptions": "Collect the names of properties on this class.", "bokeh.models.CategoricalColorMapper": "Collect the names of properties on this class.", "bokeh.models.Action": "Collect the names of properties on this class.", "bokeh.model.DataModel": "Collect the names of properties on this class.", "bokeh.models.MultiLine": "Collect the names of properties on this class.", "bokeh.models.MultiPolygons": "Collect the names of properties on this class.", "bokeh.models.Oval": "Collect the names of properties on this class.", "bokeh.models.Patch": "Collect the names of properties on this class.", "bokeh.models.Patches": "Collect the names of properties on this class.", "bokeh.models.Quad": "Collect the names of properties on this class.", "bokeh.models.Quadratic": "Collect the names of properties on this class.", "bokeh.models.DataRange": "Collect the names of properties on this class.", "bokeh.models.Ray": "Collect the names of properties on this class.", "bokeh.models.Rect": "Collect the names of properties on this class.", "bokeh.models.ContourRenderer": "Collect the names of properties on this class.", "bokeh.models.CategoricalScale": "Collect the names of properties on this class.", "bokeh.models.Scatter": "Collect the names of properties on this class.", "bokeh.models.Segment": "Collect the names of properties on this class.", "bokeh.models.IntersectRenderers": "Collect the names of properties on this class.", "bokeh.models.ByCSS": "Collect the names of properties on this class.", "bokeh.models.AbstractSlider": "Collect the names of properties on this class.", "bokeh.models.AjaxDataSource": "Collect the names of properties on this class.", "bokeh.sphinxext.sample.Foo": "Collect the names of properties on this class.", "bokeh.models.Step": "Collect the names of properties on this class.", "bokeh.models.AvgAggregator": "Collect the names of properties on this class.", "bokeh.models.Ascii": "Collect the names of properties on this class.", "bokeh.models.CanvasTexture": "Collect the names of properties on this class.", "bokeh.models.AdaptiveTicker": "Collect the names of properties on this class.", "bokeh.models.BBoxTileSource": "Collect the names of properties on this class.", "bokeh.models.Tooltip": "Collect the names of properties on this class.", "bokeh.models.CustomJSTransform": "Collect the names of properties on this class.", "bokeh.models.UIElement": "Collect the names of properties on this class.", "bokeh.models.VArea": "Collect the names of properties on this class.", "bokeh.models.VBar": "Collect the names of properties on this class.", "bokeh.models.Widget": "Collect the names of properties on this class." }, "properties_with_refs": { "bokeh.models.AnnularWedge": "Collect the names of all properties on this class that also have references.", "bokeh.models.Annulus": "Collect the names of all properties on this class that also have references.", "bokeh.models.Arc": "Collect the names of all properties on this class that also have references.", "bokeh.models.ArrowHead": "Collect the names of all properties on this class that also have references.", "bokeh.models.Bezier": "Collect the names of all properties on this class that also have references.", "bokeh.models.Block": "Collect the names of all properties on this class that also have references.", "bokeh.models.AbstractButton": "Collect the names of all properties on this class that also have references.", "bokeh.models.Circle": "Collect the names of all properties on this class that also have references.", "bokeh.models.Dialog": "Collect the names of all properties on this class that also have references.", "bokeh.models.Ellipse": "Collect the names of all properties on this class that also have references.", "bokeh.models.Examiner": "Collect the names of all properties on this class that also have references.", "bokeh.models.CumSum": "Collect the names of all properties on this class that also have references.", "bokeh.plotting.figure": "Collect the names of all properties on this class that also have references.", "bokeh.models.AllIndices": "Collect the names of all properties on this class that also have references.", "bokeh.models.BasicTickFormatter": "Collect the names of all properties on this class that also have references.", "bokeh.models.Glyph": "Collect the names of all properties on this class that also have references.", "bokeh.models.EdgeCoordinates": "Collect the names of all properties on this class that also have references.", "bokeh.models.Grid": "Collect the names of all properties on this class that also have references.", "bokeh.models.AbstractGroup": "Collect the names of all properties on this class that also have references.", "bokeh.models.HArea": "Collect the names of all properties on this class that also have references.", "bokeh.core.has_props.HasProps": "Collect the names of all properties on this class that also have references.", "bokeh.models.HBar": "Collect the names of all properties on this class that also have references.", "bokeh.models.HexTile": "Collect the names of all properties on this class that also have references.", "bokeh.models.BuiltinIcon": "Collect the names of all properties on this class that also have references.", "bokeh.models.Image": "Collect the names of all properties on this class that also have references.", "bokeh.models.ImageRGBA": "Collect the names of all properties on this class that also have references.", "bokeh.models.ImageURL": "Collect the names of all properties on this class that also have references.", "bokeh.models.AutocompleteInput": "Collect the names of all properties on this class that also have references.", "bokeh.models.Line": "Collect the names of all properties on this class that also have references.", "bokeh.models.GMapOptions": "Collect the names of all properties on this class that also have references.", "bokeh.models.CategoricalColorMapper": "Collect the names of all properties on this class that also have references.", "bokeh.models.Action": "Collect the names of all properties on this class that also have references.", "bokeh.model.DataModel": "Collect the names of all properties on this class that also have references.", "bokeh.models.MultiLine": "Collect the names of all properties on this class that also have references.", "bokeh.models.MultiPolygons": "Collect the names of all properties on this class that also have references.", "bokeh.models.Oval": "Collect the names of all properties on this class that also have references.", "bokeh.models.Patch": "Collect the names of all properties on this class that also have references.", "bokeh.models.Patches": "Collect the names of all properties on this class that also have references.", "bokeh.models.Quad": "Collect the names of all properties on this class that also have references.", "bokeh.models.Quadratic": "Collect the names of all properties on this class that also have references.", "bokeh.models.DataRange": "Collect the names of all properties on this class that also have references.", "bokeh.models.Ray": "Collect the names of all properties on this class that also have references.", "bokeh.models.Rect": "Collect the names of all properties on this class that also have references.", "bokeh.models.ContourRenderer": "Collect the names of all properties on this class that also have references.", "bokeh.models.CategoricalScale": "Collect the names of all properties on this class that also have references.", "bokeh.models.Scatter": "Collect the names of all properties on this class that also have references.", "bokeh.models.Segment": "Collect the names of all properties on this class that also have references.", "bokeh.models.IntersectRenderers": "Collect the names of all properties on this class that also have references.", "bokeh.models.ByCSS": "Collect the names of all properties on this class that also have references.", "bokeh.models.AbstractSlider": "Collect the names of all properties on this class that also have references.", "bokeh.models.AjaxDataSource": "Collect the names of all properties on this class that also have references.", "bokeh.sphinxext.sample.Foo": "Collect the names of all properties on this class that also have references.", "bokeh.models.Step": "Collect the names of all properties on this class that also have references.", "bokeh.models.AvgAggregator": "Collect the names of all properties on this class that also have references.", "bokeh.models.Ascii": "Collect the names of all properties on this class that also have references.", "bokeh.models.CanvasTexture": "Collect the names of all properties on this class that also have references.", "bokeh.models.AdaptiveTicker": "Collect the names of all properties on this class that also have references.", "bokeh.models.BBoxTileSource": "Collect the names of all properties on this class that also have references.", "bokeh.models.Tooltip": "Collect the names of all properties on this class that also have references.", "bokeh.models.CustomJSTransform": "Collect the names of all properties on this class that also have references.", "bokeh.models.UIElement": "Collect the names of all properties on this class that also have references.", "bokeh.models.VArea": "Collect the names of all properties on this class that also have references.", "bokeh.models.VBar": "Collect the names of all properties on this class that also have references.", "bokeh.models.Widget": "Collect the names of all properties on this class that also have references." }, "properties_with_values": { "bokeh.models.AnnularWedge": "Collect a dict mapping property names to their values.", "bokeh.models.Annulus": "Collect a dict mapping property names to their values.", "bokeh.models.Arc": "Collect a dict mapping property names to their values.", "bokeh.models.ArrowHead": "Collect a dict mapping property names to their values.", "bokeh.models.Bezier": "Collect a dict mapping property names to their values.", "bokeh.models.Block": "Collect a dict mapping property names to their values.", "bokeh.models.AbstractButton": "Collect a dict mapping property names to their values.", "bokeh.models.Circle": "Collect a dict mapping property names to their values.", "bokeh.models.Dialog": "Collect a dict mapping property names to their values.", "bokeh.models.Ellipse": "Collect a dict mapping property names to their values.", "bokeh.models.Examiner": "Collect a dict mapping property names to their values.", "bokeh.models.CumSum": "Collect a dict mapping property names to their values.", "bokeh.plotting.figure": "Collect a dict mapping property names to their values.", "bokeh.models.AllIndices": "Collect a dict mapping property names to their values.", "bokeh.models.BasicTickFormatter": "Collect a dict mapping property names to their values.", "bokeh.models.Glyph": "Collect a dict mapping property names to their values.", "bokeh.models.EdgeCoordinates": "Collect a dict mapping property names to their values.", "bokeh.models.Grid": "Collect a dict mapping property names to their values.", "bokeh.models.AbstractGroup": "Collect a dict mapping property names to their values.", "bokeh.models.HArea": "Collect a dict mapping property names to their values.", "bokeh.core.has_props.HasProps": "Collect a dict mapping property names to their values.", "bokeh.models.HBar": "Collect a dict mapping property names to their values.", "bokeh.models.HexTile": "Collect a dict mapping property names to their values.", "bokeh.models.BuiltinIcon": "Collect a dict mapping property names to their values.", "bokeh.models.Image": "Collect a dict mapping property names to their values.", "bokeh.models.ImageRGBA": "Collect a dict mapping property names to their values.", "bokeh.models.ImageURL": "Collect a dict mapping property names to their values.", "bokeh.models.AutocompleteInput": "Collect a dict mapping property names to their values.", "bokeh.models.Line": "Collect a dict mapping property names to their values.", "bokeh.models.GMapOptions": "Collect a dict mapping property names to their values.", "bokeh.models.CategoricalColorMapper": "Collect a dict mapping property names to their values.", "bokeh.models.Action": "Collect a dict mapping property names to their values.", "bokeh.model.DataModel": "Collect a dict mapping property names to their values.", "bokeh.models.MultiLine": "Collect a dict mapping property names to their values.", "bokeh.models.MultiPolygons": "Collect a dict mapping property names to their values.", "bokeh.models.Oval": "Collect a dict mapping property names to their values.", "bokeh.models.Patch": "Collect a dict mapping property names to their values.", "bokeh.models.Patches": "Collect a dict mapping property names to their values.", "bokeh.models.Quad": "Collect a dict mapping property names to their values.", "bokeh.models.Quadratic": "Collect a dict mapping property names to their values.", "bokeh.models.DataRange": "Collect a dict mapping property names to their values.", "bokeh.models.Ray": "Collect a dict mapping property names to their values.", "bokeh.models.Rect": "Collect a dict mapping property names to their values.", "bokeh.models.ContourRenderer": "Collect a dict mapping property names to their values.", "bokeh.models.CategoricalScale": "Collect a dict mapping property names to their values.", "bokeh.models.Scatter": "Collect a dict mapping property names to their values.", "bokeh.models.Segment": "Collect a dict mapping property names to their values.", "bokeh.models.IntersectRenderers": "Collect a dict mapping property names to their values.", "bokeh.models.ByCSS": "Collect a dict mapping property names to their values.", "bokeh.models.AbstractSlider": "Collect a dict mapping property names to their values.", "bokeh.models.AjaxDataSource": "Collect a dict mapping property names to their values.", "bokeh.sphinxext.sample.Foo": "Collect a dict mapping property names to their values.", "bokeh.models.Step": "Collect a dict mapping property names to their values.", "bokeh.models.AvgAggregator": "Collect a dict mapping property names to their values.", "bokeh.models.Ascii": "Collect a dict mapping property names to their values.", "bokeh.models.CanvasTexture": "Collect a dict mapping property names to their values.", "bokeh.models.AdaptiveTicker": "Collect a dict mapping property names to their values.", "bokeh.models.BBoxTileSource": "Collect a dict mapping property names to their values.", "bokeh.models.Tooltip": "Collect a dict mapping property names to their values.", "bokeh.models.CustomJSTransform": "Collect a dict mapping property names to their values.", "bokeh.models.UIElement": "Collect a dict mapping property names to their values.", "bokeh.models.VArea": "Collect a dict mapping property names to their values.", "bokeh.models.VBar": "Collect a dict mapping property names to their values.", "bokeh.models.Widget": "Collect a dict mapping property names to their values." }, "query_properties_with_values": { "bokeh.models.AnnularWedge": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Annulus": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Arc": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.ArrowHead": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Bezier": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Block": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AbstractButton": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Circle": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Dialog": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Ellipse": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Examiner": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.CumSum": "Query the properties values of HasProps instances with a predicate.", "bokeh.plotting.figure": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AllIndices": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.BasicTickFormatter": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Glyph": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.EdgeCoordinates": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Grid": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AbstractGroup": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.HArea": "Query the properties values of HasProps instances with a predicate.", "bokeh.core.has_props.HasProps": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.HBar": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.HexTile": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.BuiltinIcon": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Image": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.ImageRGBA": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.ImageURL": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AutocompleteInput": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Line": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.GMapOptions": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.CategoricalColorMapper": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Action": "Query the properties values of HasProps instances with a predicate.", "bokeh.model.DataModel": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.MultiLine": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.MultiPolygons": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Oval": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Patch": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Patches": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Quad": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Quadratic": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.DataRange": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Ray": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Rect": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.ContourRenderer": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.CategoricalScale": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Scatter": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Segment": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.IntersectRenderers": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.ByCSS": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AbstractSlider": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AjaxDataSource": "Query the properties values of HasProps instances with a predicate.", "bokeh.sphinxext.sample.Foo": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Step": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AvgAggregator": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Ascii": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.CanvasTexture": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.AdaptiveTicker": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.BBoxTileSource": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Tooltip": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.CustomJSTransform": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.UIElement": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.VArea": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.VBar": "Query the properties values of HasProps instances with a predicate.", "bokeh.models.Widget": "Query the properties values of HasProps instances with a predicate." }, "references": { "bokeh.models.AnnularWedge": "Returns all Models that this object has references to.", "bokeh.models.Annulus": "Returns all Models that this object has references to.", "bokeh.models.Arc": "Returns all Models that this object has references to.", "bokeh.models.ArrowHead": "Returns all Models that this object has references to.", "bokeh.models.Bezier": "Returns all Models that this object has references to.", "bokeh.models.Block": "Returns all Models that this object has references to.", "bokeh.models.AbstractButton": "Returns all Models that this object has references to.", "bokeh.models.Circle": "Returns all Models that this object has references to.", "bokeh.models.Dialog": "Returns all Models that this object has references to.", "bokeh.models.Ellipse": "Returns all Models that this object has references to.", "bokeh.models.Examiner": "Returns all Models that this object has references to.", "bokeh.models.CumSum": "Returns all Models that this object has references to.", "bokeh.plotting.figure": "Returns all Models that this object has references to.", "bokeh.models.AllIndices": "Returns all Models that this object has references to.", "bokeh.models.BasicTickFormatter": "Returns all Models that this object has references to.", "bokeh.models.Glyph": "Returns all Models that this object has references to.", "bokeh.models.EdgeCoordinates": "Returns all Models that this object has references to.", "bokeh.models.Grid": "Returns all Models that this object has references to.", "bokeh.models.AbstractGroup": "Returns all Models that this object has references to.", "bokeh.models.HArea": "Returns all Models that this object has references to.", "bokeh.models.HBar": "Returns all Models that this object has references to.", "bokeh.models.HexTile": "Returns all Models that this object has references to.", "bokeh.models.BuiltinIcon": "Returns all Models that this object has references to.", "bokeh.models.Image": "Returns all Models that this object has references to.", "bokeh.models.ImageRGBA": "Returns all Models that this object has references to.", "bokeh.models.ImageURL": "Returns all Models that this object has references to.", "bokeh.models.AutocompleteInput": "Returns all Models that this object has references to.", "bokeh.models.Line": "Returns all Models that this object has references to.", "bokeh.models.GMapOptions": "Returns all Models that this object has references to.", "bokeh.models.CategoricalColorMapper": "Returns all Models that this object has references to.", "bokeh.models.Action": "Returns all Models that this object has references to.", "bokeh.model.DataModel": "Returns all Models that this object has references to.", "bokeh.models.MultiLine": "Returns all Models that this object has references to.", "bokeh.models.MultiPolygons": "Returns all Models that this object has references to.", "bokeh.models.Oval": "Returns all Models that this object has references to.", "bokeh.models.Patch": "Returns all Models that this object has references to.", "bokeh.models.Patches": "Returns all Models that this object has references to.", "bokeh.models.Quad": "Returns all Models that this object has references to.", "bokeh.models.Quadratic": "Returns all Models that this object has references to.", "bokeh.models.DataRange": "Returns all Models that this object has references to.", "bokeh.models.Ray": "Returns all Models that this object has references to.", "bokeh.models.Rect": "Returns all Models that this object has references to.", "bokeh.models.ContourRenderer": "Returns all Models that this object has references to.", "bokeh.models.CategoricalScale": "Returns all Models that this object has references to.", "bokeh.models.Scatter": "Returns all Models that this object has references to.", "bokeh.models.Segment": "Returns all Models that this object has references to.", "bokeh.models.IntersectRenderers": "Returns all Models that this object has references to.", "bokeh.models.ByCSS": "Returns all Models that this object has references to.", "bokeh.models.AbstractSlider": "Returns all Models that this object has references to.", "bokeh.models.AjaxDataSource": "Returns all Models that this object has references to.", "bokeh.sphinxext.sample.Foo": "Returns all Models that this object has references to.", "bokeh.models.Step": "Returns all Models that this object has references to.", "bokeh.models.AvgAggregator": "Returns all Models that this object has references to.", "bokeh.models.Ascii": "Returns all Models that this object has references to.", "bokeh.models.CanvasTexture": "Returns all Models that this object has references to.", "bokeh.models.AdaptiveTicker": "Returns all Models that this object has references to.", "bokeh.models.BBoxTileSource": "Returns all Models that this object has references to.", "bokeh.models.Tooltip": "Returns all Models that this object has references to.", "bokeh.models.CustomJSTransform": "Returns all Models that this object has references to.", "bokeh.models.UIElement": "Returns all Models that this object has references to.", "bokeh.models.VArea": "Returns all Models that this object has references to.", "bokeh.models.VBar": "Returns all Models that this object has references to.", "bokeh.models.Widget": "Returns all Models that this object has references to." }, "remove_on_change": { "bokeh.models.AnnularWedge": "Remove a callback from this object", "bokeh.models.Annulus": "Remove a callback from this object", "bokeh.models.Arc": "Remove a callback from this object", "bokeh.models.ArrowHead": "Remove a callback from this object", "bokeh.models.Bezier": "Remove a callback from this object", "bokeh.models.Block": "Remove a callback from this object", "bokeh.models.AbstractButton": "Remove a callback from this object", "bokeh.models.Circle": "Remove a callback from this object", "bokeh.models.Dialog": "Remove a callback from this object", "bokeh.document.Document": "Remove a callback added earlier with on_change.", "bokeh.models.Ellipse": "Remove a callback from this object", "bokeh.models.Examiner": "Remove a callback from this object", "bokeh.models.CumSum": "Remove a callback from this object", "bokeh.plotting.figure": "Remove a callback from this object", "bokeh.models.AllIndices": "Remove a callback from this object", "bokeh.models.BasicTickFormatter": "Remove a callback from this object", "bokeh.models.Glyph": "Remove a callback from this object", "bokeh.models.EdgeCoordinates": "Remove a callback from this object", "bokeh.models.Grid": "Remove a callback from this object", "bokeh.models.AbstractGroup": "Remove a callback from this object", "bokeh.models.HArea": "Remove a callback from this object", "bokeh.models.HBar": "Remove a callback from this object", "bokeh.models.HexTile": "Remove a callback from this object", "bokeh.models.BuiltinIcon": "Remove a callback from this object", "bokeh.models.Image": "Remove a callback from this object", "bokeh.models.ImageRGBA": "Remove a callback from this object", "bokeh.models.ImageURL": "Remove a callback from this object", "bokeh.models.AutocompleteInput": "Remove a callback from this object", "bokeh.models.Line": "Remove a callback from this object", "bokeh.models.GMapOptions": "Remove a callback from this object", "bokeh.models.CategoricalColorMapper": "Remove a callback from this object", "bokeh.models.Action": "Remove a callback from this object", "bokeh.model.DataModel": "Remove a callback from this object", "bokeh.models.MultiLine": "Remove a callback from this object", "bokeh.models.MultiPolygons": "Remove a callback from this object", "bokeh.models.Oval": "Remove a callback from this object", "bokeh.models.Patch": "Remove a callback from this object", "bokeh.models.Patches": "Remove a callback from this object", "bokeh.models.Quad": "Remove a callback from this object", "bokeh.models.Quadratic": "Remove a callback from this object", "bokeh.models.DataRange": "Remove a callback from this object", "bokeh.models.Ray": "Remove a callback from this object", "bokeh.models.Rect": "Remove a callback from this object", "bokeh.models.ContourRenderer": "Remove a callback from this object", "bokeh.models.CategoricalScale": "Remove a callback from this object", "bokeh.models.Scatter": "Remove a callback from this object", "bokeh.models.Segment": "Remove a callback from this object", "bokeh.models.IntersectRenderers": "Remove a callback from this object", "bokeh.models.ByCSS": "Remove a callback from this object", "bokeh.models.AbstractSlider": "Remove a callback from this object", "bokeh.models.AjaxDataSource": "Remove a callback from this object", "bokeh.sphinxext.sample.Foo": "Remove a callback from this object", "bokeh.models.Step": "Remove a callback from this object", "bokeh.models.AvgAggregator": "Remove a callback from this object", "bokeh.models.Ascii": "Remove a callback from this object", "bokeh.models.CanvasTexture": "Remove a callback from this object", "bokeh.models.AdaptiveTicker": "Remove a callback from this object", "bokeh.models.BBoxTileSource": "Remove a callback from this object", "bokeh.models.Tooltip": "Remove a callback from this object", "bokeh.models.CustomJSTransform": "Remove a callback from this object", "bokeh.models.UIElement": "Remove a callback from this object", "bokeh.models.VArea": "Remove a callback from this object", "bokeh.models.VBar": "Remove a callback from this object", "bokeh.models.Widget": "Remove a callback from this object" }, "select": { "bokeh.models.AnnularWedge": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Annulus": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Arc": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.ArrowHead": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Bezier": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Block": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AbstractButton": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Circle": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Dialog": "Query this object and all of its references for objects that match the given selector.", "bokeh.document.Document": "Query this document for objects that match the given selector.", "bokeh.models.Ellipse": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Examiner": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.CumSum": "Query this object and all of its references for objects that match the given selector.", "bokeh.plotting.figure": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AllIndices": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.BasicTickFormatter": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Glyph": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.EdgeCoordinates": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Grid": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AbstractGroup": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.HArea": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.HBar": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.HexTile": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.BuiltinIcon": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Image": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.ImageRGBA": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.ImageURL": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AutocompleteInput": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Line": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.GMapOptions": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.CategoricalColorMapper": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Action": "Query this object and all of its references for objects that match the given selector.", "bokeh.model.DataModel": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.MultiLine": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.MultiPolygons": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Oval": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Patch": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Patches": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Quad": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Quadratic": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.DataRange": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Ray": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Rect": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.ContourRenderer": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.CategoricalScale": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Scatter": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Segment": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.IntersectRenderers": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.ByCSS": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AbstractSlider": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AjaxDataSource": "Query this object and all of its references for objects that match the given selector.", "bokeh.sphinxext.sample.Foo": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Step": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AvgAggregator": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Ascii": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.CanvasTexture": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.AdaptiveTicker": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.BBoxTileSource": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Tooltip": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.CustomJSTransform": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.UIElement": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.VArea": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.VBar": "Query this object and all of its references for objects that match the given selector.", "bokeh.models.Widget": "Query this object and all of its references for objects that match the given selector." }, "select_one": { "bokeh.models.AnnularWedge": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Annulus": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Arc": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.ArrowHead": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Bezier": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Block": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AbstractButton": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Circle": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Dialog": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.document.Document": "Query this document for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found", "bokeh.models.Ellipse": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Examiner": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.CumSum": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.plotting.figure": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AllIndices": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.BasicTickFormatter": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Glyph": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.EdgeCoordinates": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Grid": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AbstractGroup": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.HArea": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.HBar": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.HexTile": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.BuiltinIcon": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Image": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.ImageRGBA": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.ImageURL": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AutocompleteInput": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Line": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.GMapOptions": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.CategoricalColorMapper": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Action": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.model.DataModel": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.MultiLine": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.MultiPolygons": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Oval": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Patch": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Patches": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Quad": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Quadratic": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.DataRange": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Ray": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Rect": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.ContourRenderer": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.CategoricalScale": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Scatter": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Segment": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.IntersectRenderers": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.ByCSS": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AbstractSlider": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AjaxDataSource": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.sphinxext.sample.Foo": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Step": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AvgAggregator": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Ascii": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.CanvasTexture": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.AdaptiveTicker": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.BBoxTileSource": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Tooltip": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.CustomJSTransform": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.UIElement": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.VArea": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.VBar": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like", "bokeh.models.Widget": "Query this object and all of its references for objects that match the given selector. Raises an error if more than one object is found. Returns single matching object, or None if nothing is found :param selector: :type selector: JSON-like" }, "set_from_json": { "bokeh.models.AnnularWedge": "Set a property value on this object from JSON.", "bokeh.models.Annulus": "Set a property value on this object from JSON.", "bokeh.models.Arc": "Set a property value on this object from JSON.", "bokeh.models.ArrowHead": "Set a property value on this object from JSON.", "bokeh.models.Bezier": "Set a property value on this object from JSON.", "bokeh.models.Block": "Set a property value on this object from JSON.", "bokeh.models.AbstractButton": "Set a property value on this object from JSON.", "bokeh.models.Circle": "Set a property value on this object from JSON.", "bokeh.core.property.descriptors.DataSpecPropertyDescriptor": "Sets the value of this property from a JSON value.", "bokeh.models.Dialog": "Set a property value on this object from JSON.", "bokeh.models.Ellipse": "Set a property value on this object from JSON.", "bokeh.models.Examiner": "Set a property value on this object from JSON.", "bokeh.models.CumSum": "Set a property value on this object from JSON.", "bokeh.plotting.figure": "Set a property value on this object from JSON.", "bokeh.models.AllIndices": "Set a property value on this object from JSON.", "bokeh.models.BasicTickFormatter": "Set a property value on this object from JSON.", "bokeh.models.Glyph": "Set a property value on this object from JSON.", "bokeh.models.EdgeCoordinates": "Set a property value on this object from JSON.", "bokeh.models.Grid": "Set a property value on this object from JSON.", "bokeh.models.AbstractGroup": "Set a property value on this object from JSON.", "bokeh.models.HArea": "Set a property value on this object from JSON.", "bokeh.core.has_props.HasProps": "Set a property value on this object from JSON.", "bokeh.models.HBar": "Set a property value on this object from JSON.", "bokeh.models.HexTile": "Set a property value on this object from JSON.", "bokeh.models.BuiltinIcon": "Set a property value on this object from JSON.", "bokeh.models.Image": "Set a property value on this object from JSON.", "bokeh.models.ImageRGBA": "Set a property value on this object from JSON.", "bokeh.models.ImageURL": "Set a property value on this object from JSON.", "bokeh.models.AutocompleteInput": "Set a property value on this object from JSON.", "bokeh.models.Line": "Set a property value on this object from JSON.", "bokeh.models.GMapOptions": "Set a property value on this object from JSON.", "bokeh.models.CategoricalColorMapper": "Set a property value on this object from JSON.", "bokeh.models.Action": "Set a property value on this object from JSON.", "bokeh.model.DataModel": "Set a property value on this object from JSON.", "bokeh.models.MultiLine": "Set a property value on this object from JSON.", "bokeh.models.MultiPolygons": "Set a property value on this object from JSON.", "bokeh.models.Oval": "Set a property value on this object from JSON.", "bokeh.models.Patch": "Set a property value on this object from JSON.", "bokeh.models.Patches": "Set a property value on this object from JSON.", "bokeh.models.Quad": "Set a property value on this object from JSON.", "bokeh.models.Quadratic": "Set a property value on this object from JSON.", "bokeh.models.DataRange": "Set a property value on this object from JSON.", "bokeh.models.Ray": "Set a property value on this object from JSON.", "bokeh.models.Rect": "Set a property value on this object from JSON.", "bokeh.models.ContourRenderer": "Set a property value on this object from JSON.", "bokeh.models.CategoricalScale": "Set a property value on this object from JSON.", "bokeh.models.Scatter": "Set a property value on this object from JSON.", "bokeh.models.Segment": "Set a property value on this object from JSON.", "bokeh.models.IntersectRenderers": "Set a property value on this object from JSON.", "bokeh.models.ByCSS": "Set a property value on this object from JSON.", "bokeh.models.AbstractSlider": "Set a property value on this object from JSON.", "bokeh.models.AjaxDataSource": "Set a property value on this object from JSON.", "bokeh.sphinxext.sample.Foo": "Set a property value on this object from JSON.", "bokeh.models.Step": "Set a property value on this object from JSON.", "bokeh.models.AvgAggregator": "Set a property value on this object from JSON.", "bokeh.models.Ascii": "Set a property value on this object from JSON.", "bokeh.models.CanvasTexture": "Set a property value on this object from JSON.", "bokeh.models.AdaptiveTicker": "Set a property value on this object from JSON.", "bokeh.models.BBoxTileSource": "Set a property value on this object from JSON.", "bokeh.models.Tooltip": "Set a property value on this object from JSON.", "bokeh.models.CustomJSTransform": "Set a property value on this object from JSON.", "bokeh.models.UIElement": "Set a property value on this object from JSON.", "bokeh.models.VArea": "Set a property value on this object from JSON.", "bokeh.models.VBar": "Set a property value on this object from JSON.", "bokeh.models.Widget": "Set a property value on this object from JSON." }, "set_select": { "bokeh.models.AnnularWedge": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Annulus": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Arc": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.ArrowHead": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Bezier": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Block": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AbstractButton": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Circle": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Dialog": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.document.Document": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Ellipse": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Examiner": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.CumSum": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.plotting.figure": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AllIndices": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.BasicTickFormatter": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Glyph": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.EdgeCoordinates": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Grid": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AbstractGroup": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.HArea": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.HBar": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.HexTile": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.BuiltinIcon": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Image": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.ImageRGBA": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.ImageURL": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AutocompleteInput": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Line": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.GMapOptions": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.CategoricalColorMapper": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Action": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.model.DataModel": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.MultiLine": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.MultiPolygons": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Oval": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Patch": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Patches": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Quad": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Quadratic": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.DataRange": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Ray": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Rect": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.ContourRenderer": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.CategoricalScale": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Scatter": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Segment": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.IntersectRenderers": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.ByCSS": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AbstractSlider": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AjaxDataSource": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.sphinxext.sample.Foo": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Step": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AvgAggregator": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Ascii": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.CanvasTexture": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.AdaptiveTicker": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.BBoxTileSource": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Tooltip": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.CustomJSTransform": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.UIElement": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.VArea": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.VBar": "Update objects that match a given selector with the specified attribute/value updates.", "bokeh.models.Widget": "Update objects that match a given selector with the specified attribute/value updates." }, "themed_values": { "bokeh.models.AnnularWedge": "Get any theme-provided overrides.", "bokeh.models.Annulus": "Get any theme-provided overrides.", "bokeh.models.Arc": "Get any theme-provided overrides.", "bokeh.models.ArrowHead": "Get any theme-provided overrides.", "bokeh.models.Bezier": "Get any theme-provided overrides.", "bokeh.models.Block": "Get any theme-provided overrides.", "bokeh.models.AbstractButton": "Get any theme-provided overrides.", "bokeh.models.Circle": "Get any theme-provided overrides.", "bokeh.models.Dialog": "Get any theme-provided overrides.", "bokeh.models.Ellipse": "Get any theme-provided overrides.", "bokeh.models.Examiner": "Get any theme-provided overrides.", "bokeh.models.CumSum": "Get any theme-provided overrides.", "bokeh.plotting.figure": "Get any theme-provided overrides.", "bokeh.models.AllIndices": "Get any theme-provided overrides.", "bokeh.models.BasicTickFormatter": "Get any theme-provided overrides.", "bokeh.models.Glyph": "Get any theme-provided overrides.", "bokeh.models.EdgeCoordinates": "Get any theme-provided overrides.", "bokeh.models.Grid": "Get any theme-provided overrides.", "bokeh.models.AbstractGroup": "Get any theme-provided overrides.", "bokeh.models.HArea": "Get any theme-provided overrides.", "bokeh.core.has_props.HasProps": "Get any theme-provided overrides.", "bokeh.models.HBar": "Get any theme-provided overrides.", "bokeh.models.HexTile": "Get any theme-provided overrides.", "bokeh.models.BuiltinIcon": "Get any theme-provided overrides.", "bokeh.models.Image": "Get any theme-provided overrides.", "bokeh.models.ImageRGBA": "Get any theme-provided overrides.", "bokeh.models.ImageURL": "Get any theme-provided overrides.", "bokeh.models.AutocompleteInput": "Get any theme-provided overrides.", "bokeh.models.Line": "Get any theme-provided overrides.", "bokeh.models.GMapOptions": "Get any theme-provided overrides.", "bokeh.models.CategoricalColorMapper": "Get any theme-provided overrides.", "bokeh.models.Action": "Get any theme-provided overrides.", "bokeh.model.DataModel": "Get any theme-provided overrides.", "bokeh.models.MultiLine": "Get any theme-provided overrides.", "bokeh.models.MultiPolygons": "Get any theme-provided overrides.", "bokeh.models.Oval": "Get any theme-provided overrides.", "bokeh.models.Patch": "Get any theme-provided overrides.", "bokeh.models.Patches": "Get any theme-provided overrides.", "bokeh.models.Quad": "Get any theme-provided overrides.", "bokeh.models.Quadratic": "Get any theme-provided overrides.", "bokeh.models.DataRange": "Get any theme-provided overrides.", "bokeh.models.Ray": "Get any theme-provided overrides.", "bokeh.models.Rect": "Get any theme-provided overrides.", "bokeh.models.ContourRenderer": "Get any theme-provided overrides.", "bokeh.models.CategoricalScale": "Get any theme-provided overrides.", "bokeh.models.Scatter": "Get any theme-provided overrides.", "bokeh.models.Segment": "Get any theme-provided overrides.", "bokeh.models.IntersectRenderers": "Get any theme-provided overrides.", "bokeh.models.ByCSS": "Get any theme-provided overrides.", "bokeh.models.AbstractSlider": "Get any theme-provided overrides.", "bokeh.models.AjaxDataSource": "Get any theme-provided overrides.", "bokeh.sphinxext.sample.Foo": "Get any theme-provided overrides.", "bokeh.models.Step": "Get any theme-provided overrides.", "bokeh.models.AvgAggregator": "Get any theme-provided overrides.", "bokeh.models.Ascii": "Get any theme-provided overrides.", "bokeh.models.CanvasTexture": "Get any theme-provided overrides.", "bokeh.models.AdaptiveTicker": "Get any theme-provided overrides.", "bokeh.models.BBoxTileSource": "Get any theme-provided overrides.", "bokeh.models.Tooltip": "Get any theme-provided overrides.", "bokeh.models.CustomJSTransform": "Get any theme-provided overrides.", "bokeh.models.UIElement": "Get any theme-provided overrides.", "bokeh.models.VArea": "Get any theme-provided overrides.", "bokeh.models.VBar": "Get any theme-provided overrides.", "bokeh.models.Widget": "Get any theme-provided overrides." }, "to_serializable": { "bokeh.models.AnnularWedge": "Converts this object to a serializable representation.", "bokeh.models.Annulus": "Converts this object to a serializable representation.", "bokeh.models.Arc": "Converts this object to a serializable representation.", "bokeh.models.Bezier": "Converts this object to a serializable representation.", "bokeh.models.Block": "Converts this object to a serializable representation.", "bokeh.models.AbstractButton": "Converts this object to a serializable representation.", "bokeh.models.Circle": "Converts this object to a serializable representation.", "bokeh.colors.color.Color": "Converts this object to a serializable representation.", "bokeh.models.Dialog": "Converts this object to a serializable representation.", "bokeh.models.Ellipse": "Converts this object to a serializable representation.", "bokeh.models.Examiner": "Converts this object to a serializable representation.", "bokeh.models.CumSum": "Converts this object to a serializable representation.", "bokeh.plotting.figure": "Converts this object to a serializable representation.", "bokeh.models.AllIndices": "Converts this object to a serializable representation.", "bokeh.models.BasicTickFormatter": "Converts this object to a serializable representation.", "bokeh.models.Glyph": "Converts this object to a serializable representation.", "bokeh.models.EdgeCoordinates": "Converts this object to a serializable representation.", "bokeh.models.Grid": "Converts this object to a serializable representation.", "bokeh.models.AbstractGroup": "Converts this object to a serializable representation.", "bokeh.models.HArea": "Converts this object to a serializable representation.", "bokeh.core.has_props.HasProps": "Converts this object to a serializable representation.", "bokeh.models.HBar": "Converts this object to a serializable representation.", "bokeh.models.HexTile": "Converts this object to a serializable representation.", "bokeh.models.BuiltinIcon": "Converts this object to a serializable representation.", "bokeh.models.Image": "Converts this object to a serializable representation.", "bokeh.models.ImageRGBA": "Converts this object to a serializable representation.", "bokeh.models.ImageURL": "Converts this object to a serializable representation.", "bokeh.models.AutocompleteInput": "Converts this object to a serializable representation.", "bokeh.models.Line": "Converts this object to a serializable representation.", "bokeh.models.GMapOptions": "Converts this object to a serializable representation.", "bokeh.models.CategoricalColorMapper": "Converts this object to a serializable representation.", "bokeh.models.Action": "Converts this object to a serializable representation.", "bokeh.model.DataModel": "Converts this object to a serializable representation.", "bokeh.models.MultiLine": "Converts this object to a serializable representation.", "bokeh.models.MultiPolygons": "Converts this object to a serializable representation.", "bokeh.models.Patch": "Converts this object to a serializable representation.", "bokeh.models.Patches": "Converts this object to a serializable representation.", "bokeh.models.Quad": "Converts this object to a serializable representation.", "bokeh.models.Quadratic": "Converts this object to a serializable representation.", "bokeh.models.DataRange": "Converts this object to a serializable representation.", "bokeh.models.Ray": "Converts this object to a serializable representation.", "bokeh.models.Rect": "Converts this object to a serializable representation.", "bokeh.models.ContourRenderer": "Converts this object to a serializable representation.", "bokeh.models.CategoricalScale": "Converts this object to a serializable representation.", "bokeh.models.Scatter": "Converts this object to a serializable representation.", "bokeh.models.Segment": "Converts this object to a serializable representation.", "bokeh.models.IntersectRenderers": "Converts this object to a serializable representation.", "bokeh.models.ByCSS": "Converts this object to a serializable representation.", "bokeh.models.AbstractSlider": "Converts this object to a serializable representation.", "bokeh.models.AjaxDataSource": "Converts this object to a serializable representation.", "bokeh.sphinxext.sample.Foo": "Converts this object to a serializable representation.", "bokeh.models.Step": "Converts this object to a serializable representation.", "bokeh.models.AvgAggregator": "Converts this object to a serializable representation.", "bokeh.models.Ascii": "Converts this object to a serializable representation.", "bokeh.models.CanvasTexture": "Converts this object to a serializable representation.", "bokeh.models.AdaptiveTicker": "Converts this object to a serializable representation.", "bokeh.models.BBoxTileSource": "Converts this object to a serializable representation.", "bokeh.models.Tooltip": "Converts this object to a serializable representation.", "bokeh.models.CustomJSTransform": "Converts this object to a serializable representation.", "bokeh.models.UIElement": "Converts this object to a serializable representation.", "bokeh.models.VArea": "Converts this object to a serializable representation.", "bokeh.models.VBar": "Converts this object to a serializable representation.", "bokeh.models.Widget": "Converts this object to a serializable representation." }, "unapply_theme": { "bokeh.models.AnnularWedge": "Remove any themed values and restore defaults.", "bokeh.models.Annulus": "Remove any themed values and restore defaults.", "bokeh.models.Arc": "Remove any themed values and restore defaults.", "bokeh.models.ArrowHead": "Remove any themed values and restore defaults.", "bokeh.models.Bezier": "Remove any themed values and restore defaults.", "bokeh.models.Block": "Remove any themed values and restore defaults.", "bokeh.models.AbstractButton": "Remove any themed values and restore defaults.", "bokeh.models.Circle": "Remove any themed values and restore defaults.", "bokeh.models.Dialog": "Remove any themed values and restore defaults.", "bokeh.models.Ellipse": "Remove any themed values and restore defaults.", "bokeh.models.Examiner": "Remove any themed values and restore defaults.", "bokeh.models.CumSum": "Remove any themed values and restore defaults.", "bokeh.plotting.figure": "Remove any themed values and restore defaults.", "bokeh.models.AllIndices": "Remove any themed values and restore defaults.", "bokeh.models.BasicTickFormatter": "Remove any themed values and restore defaults.", "bokeh.models.Glyph": "Remove any themed values and restore defaults.", "bokeh.models.EdgeCoordinates": "Remove any themed values and restore defaults.", "bokeh.models.Grid": "Remove any themed values and restore defaults.", "bokeh.models.AbstractGroup": "Remove any themed values and restore defaults.", "bokeh.models.HArea": "Remove any themed values and restore defaults.", "bokeh.core.has_props.HasProps": "Remove any themed values and restore defaults.", "bokeh.models.HBar": "Remove any themed values and restore defaults.", "bokeh.models.HexTile": "Remove any themed values and restore defaults.", "bokeh.models.BuiltinIcon": "Remove any themed values and restore defaults.", "bokeh.models.Image": "Remove any themed values and restore defaults.", "bokeh.models.ImageRGBA": "Remove any themed values and restore defaults.", "bokeh.models.ImageURL": "Remove any themed values and restore defaults.", "bokeh.models.AutocompleteInput": "Remove any themed values and restore defaults.", "bokeh.models.Line": "Remove any themed values and restore defaults.", "bokeh.models.GMapOptions": "Remove any themed values and restore defaults.", "bokeh.models.CategoricalColorMapper": "Remove any themed values and restore defaults.", "bokeh.models.Action": "Remove any themed values and restore defaults.", "bokeh.model.DataModel": "Remove any themed values and restore defaults.", "bokeh.models.MultiLine": "Remove any themed values and restore defaults.", "bokeh.models.MultiPolygons": "Remove any themed values and restore defaults.", "bokeh.models.Oval": "Remove any themed values and restore defaults.", "bokeh.models.Patch": "Remove any themed values and restore defaults.", "bokeh.models.Patches": "Remove any themed values and restore defaults.", "bokeh.models.Quad": "Remove any themed values and restore defaults.", "bokeh.models.Quadratic": "Remove any themed values and restore defaults.", "bokeh.models.DataRange": "Remove any themed values and restore defaults.", "bokeh.models.Ray": "Remove any themed values and restore defaults.", "bokeh.models.Rect": "Remove any themed values and restore defaults.", "bokeh.models.ContourRenderer": "Remove any themed values and restore defaults.", "bokeh.models.CategoricalScale": "Remove any themed values and restore defaults.", "bokeh.models.Scatter": "Remove any themed values and restore defaults.", "bokeh.models.Segment": "Remove any themed values and restore defaults.", "bokeh.models.IntersectRenderers": "Remove any themed values and restore defaults.", "bokeh.models.ByCSS": "Remove any themed values and restore defaults.", "bokeh.models.AbstractSlider": "Remove any themed values and restore defaults.", "bokeh.models.AjaxDataSource": "Remove any themed values and restore defaults.", "bokeh.sphinxext.sample.Foo": "Remove any themed values and restore defaults.", "bokeh.models.Step": "Remove any themed values and restore defaults.", "bokeh.models.AvgAggregator": "Remove any themed values and restore defaults.", "bokeh.models.Ascii": "Remove any themed values and restore defaults.", "bokeh.models.CanvasTexture": "Remove any themed values and restore defaults.", "bokeh.models.AdaptiveTicker": "Remove any themed values and restore defaults.", "bokeh.models.BBoxTileSource": "Remove any themed values and restore defaults.", "bokeh.models.Tooltip": "Remove any themed values and restore defaults.", "bokeh.models.CustomJSTransform": "Remove any themed values and restore defaults.", "bokeh.models.UIElement": "Remove any themed values and restore defaults.", "bokeh.models.VArea": "Remove any themed values and restore defaults.", "bokeh.models.VBar": "Remove any themed values and restore defaults.", "bokeh.models.Widget": "Remove any themed values and restore defaults." }, "update": { "bokeh.models.AnnularWedge": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Annulus": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Arc": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.ArrowHead": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Bezier": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Block": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AbstractButton": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Circle": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Dialog": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Ellipse": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Examiner": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.CumSum": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.plotting.figure": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AllIndices": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.BasicTickFormatter": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Glyph": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.EdgeCoordinates": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Grid": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AbstractGroup": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.HArea": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.core.has_props.HasProps": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.HBar": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.HexTile": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.BuiltinIcon": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Image": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.ImageRGBA": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.ImageURL": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AutocompleteInput": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Line": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.GMapOptions": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.CategoricalColorMapper": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Action": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.model.DataModel": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.MultiLine": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.MultiPolygons": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Oval": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Patch": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Patches": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Quad": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Quadratic": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.DataRange": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Ray": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Rect": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.ContourRenderer": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.CategoricalScale": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Scatter": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Segment": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.IntersectRenderers": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.ByCSS": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AbstractSlider": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AjaxDataSource": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.sphinxext.sample.Foo": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Step": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AvgAggregator": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Ascii": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.CanvasTexture": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.AdaptiveTicker": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.BBoxTileSource": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Tooltip": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.CustomJSTransform": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.UIElement": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.VArea": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.VBar": "Updates the object\u2019s properties from the given keyword arguments.", "bokeh.models.Widget": "Updates the object\u2019s properties from the given keyword arguments." }, "__init__": { "bokeh.application.application.Application": "Application factory.", "bokeh.application.handlers.code.CodeHandler": "source (str) \u2013 python source code", "bokeh.application.handlers.code_runner.CodeRunner": "source (str) \u2013 A string containing Python source code to execute", "bokeh.core.property.descriptors.PropertyDescriptor": "Create a PropertyDescriptor for basic Bokeh properties.", "bokeh.application.handlers.directory.DirectoryHandler": "filename (str) : a path to an application directory with either \u201cmain.py\u201d or \u201cmain.ipynb\u201d", "bokeh.events.ModelEvent": "Create a new base event.", "bokeh.application.handlers.function.FunctionHandler": "func (callable) \u2013 a function to modify and return a Bokeh Document. The function should have the form: def func (doc: Document): # modify doc return doc and it should return the passed-in document after making any modifications in-place.", "bokeh.application.handlers.notebook.NotebookHandler": "filename (str) : a path to a Jupyter notebook (\u201c.ipynb\u201d) file", "bokeh.protocol.message.Message": "Initialize a new message from header, metadata, and content dictionaries.", "bokeh.application.handlers.script.ScriptHandler": "filename (str) : a path to a Python source (\u201c.py\u201d) file", "bokeh.application.handlers.server_lifecycle.ServerLifecycleHandler": "filename (str) \u2013 path to a module to load lifecycle callbacks from", "bokeh.models.ColumnDataSource": "If called with a single argument that is a dict or pandas.DataFrame, treat that implicitly as the \u201cdata\u201d attribute.", "bokeh.command.subcommand.Subcommand": "Initialize the subcommand with its parser" }, "add": { "bokeh.application.application.Application": "Add a handler to the pipeline used to initialize new documents.", "bokeh.models.AjaxDataSource": "Appends a new column of data to the data source." }, "create_document": { "bokeh.application.application.Application": "Creates and initializes a document using the Application\u2019s handlers." }, "initialize_document": { "bokeh.application.application.Application": "Fills in a new document using the Application\u2019s handlers." }, "on_server_loaded": { "bokeh.application.application.Application": "Invoked to execute code when a new session is created.", "bokeh.application.handlers.directory.DirectoryHandler": "Execute on_server_unloaded` from server_lifecycle.py (if it is defined) when the server is first started.", "bokeh.application.handlers.handler.Handler": "Execute code when the server is first started." }, "on_server_unloaded": { "bokeh.application.application.Application": "Invoked to execute code when the server cleanly exits. (Before stopping the server\u2019s IOLoop.)", "bokeh.application.handlers.directory.DirectoryHandler": "Execute on_server_unloaded from server_lifecycle.py (if it is defined) when the server cleanly exits. (Before stopping the server\u2019s IOLoop.)", "bokeh.application.handlers.handler.Handler": "Execute code when the server cleanly exits. (Before stopping the server\u2019s IOLoop.)" }, "on_session_created": { "bokeh.application.application.Application": "Invoked to execute code when a new session is created.", "bokeh.application.handlers.directory.DirectoryHandler": "Execute on_session_created from server_lifecycle.py (if it is defined) when a new session is created.", "bokeh.application.handlers.handler.Handler": "Execute code when a new session is created." }, "on_session_destroyed": { "bokeh.application.application.Application": "Invoked to execute code when a session is destroyed.", "bokeh.application.handlers.directory.DirectoryHandler": "Execute on_session_destroyed from server_lifecycle.py (if it is defined) when a session is destroyed.", "bokeh.document.Document": "Provide callbacks to invoke when the session serving the Document is destroyed", "bokeh.application.handlers.handler.Handler": "Execute code when a session is destroyed." }, "process_request": { "bokeh.application.application.Application": "Processes incoming HTTP request returning a dictionary of additional data to add to the session_context.", "bokeh.application.handlers.directory.DirectoryHandler": "Processes incoming HTTP request returning a dictionary of additional data to add to the session_context.", "bokeh.application.handlers.handler.Handler": "Processes incoming HTTP request returning a dictionary of additional data to add to the session_context." }, "with_locked_document": { "bokeh.application.application.SessionContext": "Runs a function with the document lock held, passing the document to the function.", "bokeh.server.contexts.BokehSessionContext": "Runs a function with the document lock held, passing the document to the function." }, "to_json": { "bokeh.models.ArrowHead": "Returns a dictionary of the attributes of this object, containing only \u201cJSON types\u201d (string, number, boolean, none, dict, list).", "bokeh.document.Document": "Convert this document to a JSON-serializble object.", "bokeh.models.Oval": "Returns a dictionary of the attributes of this object, containing only \u201cJSON types\u201d (string, number, boolean, none, dict, list)." }, "to_json_string": { "bokeh.models.ArrowHead": "Returns a JSON string encoding the attributes of this object.", "bokeh.models.Oval": "Returns a JSON string encoding the attributes of this object." }, "update_from_json": { "bokeh.models.ArrowHead": "Updates the object\u2019s properties from a JSON attributes dictionary.", "bokeh.models.Oval": "Updates the object\u2019s properties from a JSON attributes dictionary." }, "validate": { "bokeh.core.property.bases.PrimitiveProperty": "Determine whether we can set this property from this value.", "bokeh.document.Document": "Perform integrity checks on the modes in this document." }, "__call__": { "bokeh.core.property.bases.Property": "Clone this property and allow to override default and help." }, "__eq__": { "bokeh.core.property.bases.Property": "Return self==value." }, "__repr__": { "bokeh.core.property.bases.Property": "Return repr (self)." }, "__str__": { "bokeh.core.property.bases.Property": "Return str (self).", "bokeh.core.property.descriptors.PropertyDescriptor": "Basic string representation of PropertyDescriptor." }, "accepts": { "bokeh.core.property.bases.Property": "Declare that other types may be converted to this property type." }, "asserts": { "bokeh.core.property.bases.Property": "Assert that prepared values satisfy given conditions." }, "is_valid": { "bokeh.core.property.bases.Property": "Whether the value passes validation" }, "make_descriptors": { "bokeh.core.property.bases.Property": "Return a list of PropertyDescriptor instances to install on a class, in order to delegate attribute access to this property.", "bokeh.core.property.descriptor_factory.PropertyDescriptorFactory": "Return a list of PropertyDescriptor instances to install on a class, in order to delegate attribute access to this property." }, "matches": { "bokeh.core.property.bases.Property": "Whether two parameters match values." }, "themed_default": { "bokeh.core.property.bases.Property": "The default, transformed by prepare_value () and the theme overrides." }, "transform": { "bokeh.core.property.bases.Property": "Change the value into the canonical format for this property." }, "wrap": { "bokeh.core.property.bases.Property": "Some property types need to wrap their values in special containers, etc." }, "js_on_click": { "bokeh.models.Button": "Set up a JavaScript handler for button clicks." }, "on_click": { "bokeh.models.Button": "Set up a handler for button clicks." }, "modify_document": { "bokeh.application.handlers.code.CodeHandler": "Run Bokeh application code to update a Document", "bokeh.application.handlers.directory.DirectoryHandler": "Execute the configured main.py or main.ipynb to modify the document.", "bokeh.application.handlers.function.FunctionHandler": "Execute the configured func to modify the document.", "bokeh.application.handlers.handler.Handler": "Modify an application document in a specified manner." }, "url_path": { "bokeh.application.handlers.code.CodeHandler": "The last path component for the basename of the configured filename.", "bokeh.application.handlers.directory.DirectoryHandler": "The last path component for the basename of the path to the configured directory.", "bokeh.application.handlers.handler.Handler": "Returns a default URL path, if applicable.", "bokeh.application.handlers.server_lifecycle.ServerLifecycleHandler": "The last path component for the basename of the path to the callback module." }, "new_module": { "bokeh.application.handlers.code_runner.CodeRunner": "Make a fresh module to run in." }, "reset_run_errors": { "bokeh.application.handlers.code_runner.CodeRunner": "Clears any transient error conditions from a previous run." }, "run": { "bokeh.application.handlers.code_runner.CodeRunner": "Execute the configured source code in a module and run any post checks." }, "clamp": { "bokeh.colors.color.Color": "Clamp numeric values to be non-negative, an optionally, less than a given maximum." }, "copy": { "bokeh.colors.color.Color": "Copy this color." }, "darken": { "bokeh.colors.color.Color": "Darken (reduce the luminance) of this color." }, "from_hsl": { "bokeh.colors.color.Color": "Create a new color by converting from an HSL color." }, "from_rgb": { "bokeh.colors.color.Color": "Create a new color by converting from an RGB color." }, "lighten": { "bokeh.colors.color.Color": "Lighten (increase the luminance) of this color." }, "to_css": { "bokeh.colors.color.Color": "Return a CSS representation of this color." }, "to_hsl": { "bokeh.colors.color.Color": "Create a new HSL color by converting from this color." }, "to_rgb": { "bokeh.colors.color.Color": "Create a new HSL color by converting from this color." }, "detach_session": { "bokeh.server.connection.ServerConnection": "Allow the session to be discarded and don\u2019t get change notifications from it anymore" }, "send_patch_document": { "bokeh.server.connection.ServerConnection": "Sends a PATCH-DOC message, returning a Future that\u2019s completed when it\u2019s written out." }, "__set__": { "bokeh.core.property.descriptors.ColumnDataPropertyDescriptor": "Implement the setter for the Python descriptor protocol." }, "__get__": { "bokeh.core.property.descriptors.PropertyDescriptor": "Implement the getter for the Python descriptor protocol." }, "__delete__": { "bokeh.core.property.descriptors.PropertyDescriptor": "Implement the deleter for the Python descriptor protocol." }, "class_default": { "bokeh.core.property.descriptors.PropertyDescriptor": "Get the default value for a specific subtype of HasProps, which may not be used for an individual instance." }, "instance_default": { "bokeh.core.property.descriptors.PropertyDescriptor": "Get the default value that will be used for a specific instance." }, "get_value": { "bokeh.core.property.descriptors.PropertyDescriptor": "Produce the value used for serialization." }, "trigger_if_changed": { "bokeh.core.property.descriptors.PropertyDescriptor": "Send a change event notification if the property is set to a value is not equal to old." }, "add_next_tick_callback": { "bokeh.document.Document": "Add callback to be invoked once on the next tick of the event loop.", "bokeh.document.locking.UnlockedDocumentProxy": "Add a \u201cnext tick\u201d callback." }, "add_periodic_callback": { "bokeh.document.Document": "Add a callback to be invoked on a session periodically." }, "add_root": { "bokeh.document.Document": "Add a model as a root of this Document." }, "add_timeout_callback": { "bokeh.document.Document": "Add callback to be invoked once, after a specified timeout passes." }, "apply_json_patch": { "bokeh.document.Document": "Apply a JSON patch object and process any resulting events." }, "clear": { "bokeh.document.Document": "Remove all content from the document but do not reset title." }, "from_json": { "bokeh.document.Document": "Load a document from JSON." }, "from_json_string": { "bokeh.document.Document": "Load a document from JSON." }, "get_model_by_id": { "bokeh.document.Document": "Find the model for the given ID in this document, or None if it is not found." }, "get_model_by_name": { "bokeh.document.Document": "Find the model for the given name in this document, or None if it is not found." }, "hold": { "bokeh.document.Document": "Activate a document hold.", "bokeh.plotting.figure": "Takes care of turning a property on and off within a scope.", "bokeh.models.GMapPlot": "Takes care of turning a property on and off within a scope." }, "remove_next_tick_callback": { "bokeh.document.Document": "Remove a callback added earlier with add_next_tick_callback.", "bokeh.document.locking.UnlockedDocumentProxy": "Remove a \u201cnext tick\u201d callback." }, "remove_periodic_callback": { "bokeh.document.Document": "Remove a callback added earlier with add_periodic_callback" }, "remove_root": { "bokeh.document.Document": "Remove a model as root model from this Document." }, "remove_timeout_callback": { "bokeh.document.Document": "Remove a callback added earlier with add_timeout_callback." }, "replace_with_json": { "bokeh.document.Document": "Overwrite everything in this document with the JSON-encoded document." }, "unhold": { "bokeh.document.Document": "Turn off any active document hold and apply any collected events." }, "add_glyph": { "bokeh.plotting.figure": "Adds a glyph to the plot with associated data sources and ranges.", "bokeh.models.GMapPlot": "Adds a glyph to the plot with associated data sources and ranges." }, "add_layout": { "bokeh.plotting.figure": "Adds an object to the plot in a specified place.", "bokeh.models.GMapPlot": "Adds an object to the plot in a specified place." }, "add_tile": { "bokeh.plotting.figure": "Adds new TileRenderer into Plot.renderers", "bokeh.models.GMapPlot": "Adds new TileRenderer into Plot.renderers" }, "add_tools": { "bokeh.plotting.figure": "Adds tools to the plot.", "bokeh.models.GMapPlot": "Adds tools to the plot." }, "annular_wedge": { "bokeh.plotting.figure": "Configure and add AnnularWedge glyphs to this figure." }, "annulus": { "bokeh.plotting.figure": "Configure and add Annulus glyphs to this figure." }, "arc": { "bokeh.plotting.figure": "Configure and add Arc glyphs to this figure." }, "asterisk": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "bezier": { "bokeh.plotting.figure": "Configure and add Bezier glyphs to this figure." }, "block": { "bokeh.plotting.figure": "Configure and add Block glyphs to this figure." }, "circle": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "circle_cross": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "circle_dot": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "circle_x": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "circle_y": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "column": { "bokeh.plotting.figure": "Return whether this plot is in a given column of a GridPlot.", "bokeh.models.GMapPlot": "Return whether this plot is in a given column of a GridPlot." }, "contour": { "bokeh.plotting.figure": "Creates a contour plot of filled polygons and/or contour lines." }, "cross": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "dash": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "diamond": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "diamond_cross": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "diamond_dot": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "dot": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "ellipse": { "bokeh.plotting.figure": "Configure and add Ellipse glyphs to this figure." }, "graph": { "bokeh.plotting.figure": "Creates a network graph using the given node, edge and layout provider." }, "harea": { "bokeh.plotting.figure": "Configure and add HArea glyphs to this figure." }, "harea_stack": { "bokeh.plotting.figure": "Generate multiple HArea renderers for levels stacked left to right." }, "hbar": { "bokeh.plotting.figure": "Configure and add HBar glyphs to this figure." }, "hbar_stack": { "bokeh.plotting.figure": "Generate multiple HBar renderers for levels stacked left to right." }, "hex": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "hex_dot": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "hex_tile": { "bokeh.plotting.figure": "Configure and add HexTile glyphs to this figure." }, "hexbin": { "bokeh.plotting.figure": "Perform a simple equal-weight hexagonal binning." }, "hline_stack": { "bokeh.plotting.figure": "Generate multiple Line renderers for lines stacked horizontally." }, "image": { "bokeh.plotting.figure": "Configure and add Image glyphs to this figure." }, "image_rgba": { "bokeh.plotting.figure": "Configure and add ImageRGBA glyphs to this figure." }, "image_url": { "bokeh.plotting.figure": "Configure and add ImageURL glyphs to this figure." }, "inverted_triangle": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "line": { "bokeh.plotting.figure": "Configure and add Line glyphs to this figure." }, "multi_line": { "bokeh.plotting.figure": "Configure and add MultiLine glyphs to this figure." }, "multi_polygons": { "bokeh.plotting.figure": "Configure and add MultiPolygons glyphs to this figure." }, "patch": { "bokeh.plotting.figure": "Configure and add Patch glyphs to this figure.", "bokeh.models.AjaxDataSource": "Efficiently update data source columns at specific locations" }, "patches": { "bokeh.plotting.figure": "Configure and add Patches glyphs to this figure." }, "plus": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "quad": { "bokeh.plotting.figure": "Configure and add Quad glyphs to this figure." }, "quadratic": { "bokeh.plotting.figure": "Configure and add Quadratic glyphs to this figure." }, "ray": { "bokeh.plotting.figure": "Configure and add Ray glyphs to this figure." }, "rect": { "bokeh.plotting.figure": "Configure and add Rect glyphs to this figure." }, "remove_tools": { "bokeh.plotting.figure": "Removes tools from the plot.", "bokeh.models.GMapPlot": "Removes tools from the plot." }, "row": { "bokeh.plotting.figure": "Return whether this plot is in a given row of a GridPlot.", "bokeh.models.GMapPlot": "Return whether this plot is in a given row of a GridPlot." }, "scatter": { "bokeh.plotting.figure": "Creates a scatter plot of the given x and y items." }, "segment": { "bokeh.plotting.figure": "Configure and add Segment glyphs to this figure." }, "square": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "square_cross": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "square_dot": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "square_pin": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "square_x": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "star": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "star_dot": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "step": { "bokeh.plotting.figure": "Configure and add Step glyphs to this figure." }, "subplot": { "bokeh.plotting.figure": "Create a new sub-coordinate system and expose a plotting API." }, "text": { "bokeh.plotting.figure": "Configure and add Text glyphs to this figure." }, "triangle": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "triangle_dot": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "triangle_pin": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "varea": { "bokeh.plotting.figure": "Configure and add VArea glyphs to this figure." }, "varea_stack": { "bokeh.plotting.figure": "Generate multiple VArea renderers for levels stacked bottom to top." }, "vbar": { "bokeh.plotting.figure": "Configure and add VBar glyphs to this figure." }, "vbar_stack": { "bokeh.plotting.figure": "Generate multiple VBar renderers for levels stacked bottom to top." }, "vline_stack": { "bokeh.plotting.figure": "Generate multiple Line renderers for lines stacked vertically." }, "wedge": { "bokeh.plotting.figure": "Configure and add Wedge glyphs to this figure." }, "x": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "y": { "bokeh.plotting.figure": "Configure and add Scatter glyphs to this figure." }, "file_contents": { "bokeh.command.subcommands.file_output.FileOutputSubcommand": "Subclasses must override this method to return the contents of the output file for the given doc. subclassed methods return different types: str: html, json bytes: SVG, png" }, "files_arg": { "bokeh.command.subcommands.file_output.FileOutputSubcommand": "Returns a positional arg for files to specify file inputs to the command." }, "other_args": { "bokeh.command.subcommands.file_output.FileOutputSubcommand": "Return args for -o / --output to specify where output should be written, and for a --args to pass on any additional command line args to the subcommand." }, "static_path": { "bokeh.application.handlers.handler.Handler": "Return a path to app-specific static resources, if applicable." }, "output_file": { "bokeh.io.state.State": "Configure output to a standalone HTML file." }, "output_notebook": { "bokeh.io.state.State": "Generate output in notebook cells." }, "reset": { "bokeh.io.state.State": "Deactivate all currently active output modes and set curdoc () to a fresh empty Document." }, "assemble": { "bokeh.protocol.Protocol": "Create a Message instance assembled from json fragments." }, "create": { "bokeh.protocol.Protocol": "Create a new Message instance for the given type." }, "add_buffer": { "bokeh.protocol.message.Message": "Associate a buffer header and payload with this message." }, "assemble_buffer": { "bokeh.protocol.message.Message": "Add a buffer header and payload that we read from the socket." }, "create_header": { "bokeh.protocol.message.Message": "Return a message header fragment dict." }, "send": { "bokeh.protocol.message.Message": "Send the message on the given connection." }, "write_buffers": { "bokeh.protocol.message.Message": "Write any buffer headers and payloads to the given connection." }, "push_to_document": { "bokeh.protocol.messages.push_doc": "ProtocolError \u2013" }, "consume": { "bokeh.protocol.receiver.Receiver": "Consume individual protocol message fragments." }, "handle": { "bokeh.server.protocol_handler.ProtocolHandler": "Delegate a received message to the appropriate handler." }, "construct_color_bar": { "bokeh.models.ContourRenderer": "Construct and return a new ContourColorBar for this ContourRenderer." }, "set_data": { "bokeh.models.ContourRenderer": "Set the contour line and filled polygon data to render." }, "bokehjsdir": { "bokeh.settings.Settings": "The location of the BokehJS source tree." }, "css_files": { "bokeh.settings.Settings": "The CSS files in the BokehJS directory." }, "js_files": { "bokeh.settings.Settings": "The JS files in the BokehJS directory." }, "load_config": { "bokeh.settings.Settings": "Load a user-specified override config file." }, "secret_key_bytes": { "bokeh.settings.Settings": "Return the secret_key, converted to bytes and cached." }, "from_df": { "bokeh.models.AjaxDataSource": "Create a dict of columns from a Pandas DataFrame, suitable for creating a ColumnDataSource." }, "from_groupby": { "bokeh.models.AjaxDataSource": "Create a dict of columns from a Pandas GroupBy, suitable for creating a ColumnDataSource." }, "remove": { "bokeh.models.AjaxDataSource": "Remove a column of data." }, "stream": { "bokeh.models.AjaxDataSource": "Efficiently update data source columns with new append-only data." }, "to_df": { "bokeh.models.AjaxDataSource": "Convert this data source to pandas DataFrame." }, "invoke": { "bokeh.command.subcommand.Subcommand": "Takes over main program flow to perform the subcommand." }, "get_session": { "bokeh.server.tornado.BokehTornado": "Get an active a session by name application path and session ID." }, "get_sessions": { "bokeh.server.tornado.BokehTornado": "Gets all currently active sessions for an application." }, "initialize": { "bokeh.server.tornado.BokehTornado": "Start a Bokeh Server Tornado Application on a given Tornado IOLoop." }, "resources": { "bokeh.server.tornado.BokehTornado": "Provide a Resources that specifies where Bokeh application sessions should load BokehJS resources from." }, "start": { "bokeh.server.tornado.BokehTornado": "Start the Bokeh Server application." }, "stop": { "bokeh.server.tornado.BokehTornado": "Stop the Bokeh Server application." }, "get_current_user": { "bokeh.server.views.auth_request_handler.AuthRequestHandler": "Delegate to the synchronous get_user method of the auth provider" }, "get_login_url": { "bokeh.server.views.auth_request_handler.AuthRequestHandler": "Delegates to``get_login_url`` method of the auth provider, or the login_url attribute." }, "prepare": { "bokeh.server.views.auth_request_handler.AuthRequestHandler": "Async counterpart to get_current_user" }, "options": { "bokeh.server.views.autoload_js_handler.AutoloadJsHandler": "Browsers make OPTIONS requests under the hood before a GET request" }, "set_default_headers": { "bokeh.server.views.autoload_js_handler.AutoloadJsHandler": "Override this to set HTTP headers at the beginning of the request." }, "check_origin": { "bokeh.server.views.ws.WSHandler": "Implement a check_origin policy for Tornado to call." }, "get_compression_options": { "bokeh.server.views.ws.WSHandler": "Override to return compression options for the connection." }, "on_close": { "bokeh.server.views.ws.WSHandler": "Clean up when the connection is closed." }, "on_message": { "bokeh.server.views.ws.WSHandler": "Process an individual wire protocol fragment." }, "on_pong": { "bokeh.server.views.ws.WSHandler": "Invoked when the response to a ping frame is received." }, "open": { "bokeh.server.views.ws.WSHandler": "Initialize a connection to a client." }, "select_subprotocol": { "bokeh.server.views.ws.WSHandler": "Override to implement subprotocol negotiation." }, "send_message": { "bokeh.server.views.ws.WSHandler": "Send a Bokeh Server protocol message to the connected client." }, "write_message": { "bokeh.server.views.ws.WSHandler": "Override parent write_message with a version that acquires a write lock before writing.", "bokeh.client.websocket.WebSocketClientConnectionWrapper": "Write a message to the websocket after obtaining the appropriate Bokeh Document lock." }, "close": { "bokeh.client.websocket.WebSocketClientConnectionWrapper": "Close the websocket." }, "read_message": { "bokeh.client.websocket.WebSocketClientConnectionWrapper": "Read a message from websocket and execute a callback." } }
